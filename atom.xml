<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>随我的博客</title>
  
  <subtitle>记录学习的点滴</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://suiwo.xyz/"/>
  <updated>2019-03-12T07:16:58.468Z</updated>
  <id>http://suiwo.xyz/</id>
  
  <author>
    <name>随我</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常见排序算法</title>
    <link href="http://suiwo.xyz/2019/03/12/%E5%B8%B8%E8%A7%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    <id>http://suiwo.xyz/2019/03/12/常见排序算法/</id>
    <published>2019-03-12T07:15:50.000Z</published>
    <updated>2019-03-12T07:16:58.468Z</updated>
    
    <content type="html"><![CDATA[<h5 id="今天实在不想刷笔试题就把常见的排序手敲了一遍"><a href="#今天实在不想刷笔试题就把常见的排序手敲了一遍" class="headerlink" title="今天实在不想刷笔试题就把常见的排序手敲了一遍"></a>今天实在不想刷笔试题就把常见的排序手敲了一遍</h5><hr><h3 id="1-选择排序"><a href="#1-选择排序" class="headerlink" title="1.选择排序"></a>1.选择排序</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChoiceSort</span>&lt;<span class="title">T</span> <span class="keyword">extends</span> <span class="title">Comparable</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ChoiceSort&lt;Integer&gt; choiceSort = <span class="keyword">new</span> ChoiceSort&lt;&gt;();</span><br><span class="line">        Integer[] arr = <span class="keyword">new</span> Integer[]&#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">7</span>&#125;;</span><br><span class="line">        choiceSort.sort(arr);</span><br><span class="line">        choiceSort.show(arr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(T[] arr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = arr.length;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> min = i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(less(arr[j] , arr[min]))&#123;</span><br><span class="line">                    min = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            exch(arr, i ,min);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">less</span><span class="params">(T t1, T t2)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t1.compareTo(t2) &lt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">exch</span><span class="params">(T[] arr, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        T tmp = arr[i];</span><br><span class="line">        arr[i] = arr[j];</span><br><span class="line">        arr[j] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(T[] arr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(T t : arr)&#123;</span><br><span class="line">            System.out.println(t);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="2-插入排序"><a href="#2-插入排序" class="headerlink" title="2.插入排序"></a>2.插入排序</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">InsertSort</span>&lt;<span class="title">T</span> <span class="keyword">extends</span> <span class="title">Comparable</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        InsertSort&lt;Integer&gt; insertSort = <span class="keyword">new</span> InsertSort&lt;&gt;();</span><br><span class="line">        Integer[] arr = <span class="keyword">new</span> Integer[]&#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">7</span>&#125;;</span><br><span class="line">        insertSort.sort(arr);</span><br><span class="line">        insertSort.show(arr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(T[] arr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &gt; <span class="number">0</span> &amp;&amp; less(arr[j], arr[j-<span class="number">1</span>]) ; j--)&#123;</span><br><span class="line">                exch(arr, j, j -<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">less</span><span class="params">(T t1, T t2)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t1.compareTo(t2) &lt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">exch</span><span class="params">(T[] a, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        T tmp = a[i];</span><br><span class="line">        a[i] = a[j];</span><br><span class="line">        a[j] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(T[] arr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(T t : arr)&#123;</span><br><span class="line">            System.out.println(t);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="3-归并排序"><a href="#3-归并排序" class="headerlink" title="3.归并排序"></a>3.归并排序</h3><h5 id="自顶向下的排序"><a href="#自顶向下的排序" class="headerlink" title="自顶向下的排序"></a>自顶向下的排序</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MergeSortStartByTop</span>&lt;<span class="title">T</span> <span class="keyword">extends</span> <span class="title">Comparable</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> T[] tmpArr;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MergeSortStartByTop&lt;Integer&gt; mergeSort = <span class="keyword">new</span> MergeSortStartByTop&lt;&gt;();</span><br><span class="line">        Integer[] arr = <span class="keyword">new</span> Integer[]&#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">7</span>&#125;;</span><br><span class="line">        mergeSort.sort(arr);</span><br><span class="line">        mergeSort.show(arr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(T[] arr)</span></span>&#123;</span><br><span class="line">        tmpArr = (T[]) <span class="keyword">new</span> Comparable[arr.length];</span><br><span class="line">        sort(arr, <span class="number">0</span>, arr.length - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(T[] arr, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(l &gt;= r)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mid = l + (r - l)/<span class="number">2</span>;</span><br><span class="line">        sort(arr, l, mid);</span><br><span class="line">        sort(arr, mid + <span class="number">1</span>, r);</span><br><span class="line">        merge(arr, mid, l, r);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(T[] arr, <span class="keyword">int</span> mid, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = l;</span><br><span class="line">        <span class="keyword">int</span> j = mid+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = l; k &lt;= r; k++)&#123;</span><br><span class="line">            tmpArr[k] = arr[k];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = l; k &lt;= r; k++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i &gt; mid)&#123;</span><br><span class="line">                arr[k] = tmpArr[j++];</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(j &gt; r)&#123;</span><br><span class="line">                arr[k] = tmpArr[i++];</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(less(tmpArr[i], tmpArr[j]))&#123;</span><br><span class="line">                arr[k] = tmpArr[i++];</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                arr[k] = tmpArr[j++];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">less</span><span class="params">(T t1, T t2)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t1.compareTo(t2) &lt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">exch</span><span class="params">(T[] a, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        T tmp = a[i];</span><br><span class="line">        a[i] = a[j];</span><br><span class="line">        a[j] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(T[] arr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(T t : arr)&#123;</span><br><span class="line">            System.out.println(t);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="自底向上的排序"><a href="#自底向上的排序" class="headerlink" title="自底向上的排序"></a>自底向上的排序</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MergeSortStartByButton</span>&lt;<span class="title">T</span> <span class="keyword">extends</span> <span class="title">Comparable</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> T[] tmpArr;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MergeSortStartByButton&lt;Integer&gt; mergeSort = <span class="keyword">new</span> MergeSortStartByButton&lt;&gt;();</span><br><span class="line">        Integer[] arr = <span class="keyword">new</span> Integer[]&#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">7</span>&#125;;</span><br><span class="line">        mergeSort.sort(arr);</span><br><span class="line">        mergeSort.show(arr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(T[] arr)</span></span>&#123;</span><br><span class="line">        tmpArr = (T[]) <span class="keyword">new</span> Comparable[arr.length];</span><br><span class="line">        <span class="keyword">int</span> width = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//外循环为每次归并排序,每组数据的宽度,每组数据的宽度之后进行2倍递增</span></span><br><span class="line">        <span class="keyword">for</span> (width = <span class="number">1</span>; width &lt; arr.length; width = width * <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//内循环为基于每组数据宽度,进行多组数据的归并排序</span></span><br><span class="line">            <span class="comment">//index += 2 * width 因为一次归并排序都是使用2组数据进行排序,所以每次</span></span><br><span class="line">            <span class="comment">//  递增2组数据的偏移量</span></span><br><span class="line">            <span class="comment">//index &lt; (size - width) 这里表示如果排序的索引位置连1组数据个数都不够了</span></span><br><span class="line">            <span class="comment">//  那就没必要处理了,因为排序至少需要1组多的数据.</span></span><br><span class="line">            <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt; (arr.length - width); index += <span class="number">2</span> * width )</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> l = index;</span><br><span class="line">                <span class="keyword">int</span> r = index + (<span class="number">2</span> * width - <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">int</span> mid = index + (r - l) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">                merge(arr, mid, l, r);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(T[] arr, <span class="keyword">int</span> mid, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = l;</span><br><span class="line">        <span class="keyword">int</span> j = mid+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = l; k &lt;= r; k++)&#123;</span><br><span class="line">            tmpArr[k] = arr[k];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = l; k &lt;= r; k++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i &gt; mid)&#123;</span><br><span class="line">                arr[k] = tmpArr[j++];</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(j &gt; r)&#123;</span><br><span class="line">                arr[k] = tmpArr[i++];</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(less(tmpArr[i], tmpArr[j]))&#123;</span><br><span class="line">                arr[k] = tmpArr[i++];</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                arr[k] = tmpArr[j++];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">less</span><span class="params">(T t1, T t2)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t1.compareTo(t2) &lt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">exch</span><span class="params">(T[] a, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        T tmp = a[i];</span><br><span class="line">        a[i] = a[j];</span><br><span class="line">        a[j] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(T[] arr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(T t : arr)&#123;</span><br><span class="line">            System.out.println(t);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="3-快速排序"><a href="#3-快速排序" class="headerlink" title="3.快速排序"></a>3.快速排序</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QuickSort</span>&lt;<span class="title">T</span> <span class="keyword">extends</span> <span class="title">Comparable</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        QuickSort&lt;Integer&gt; quickSort = <span class="keyword">new</span> QuickSort&lt;&gt;();</span><br><span class="line">        Integer[] arr = <span class="keyword">new</span> Integer[]&#123;<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">88</span>,-<span class="number">2</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">7</span>&#125;;</span><br><span class="line">        quickSort.sort(arr);</span><br><span class="line">        System.out.println(<span class="string">"-----"</span>);</span><br><span class="line">        quickSort.show(arr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(T[] arr)</span></span>&#123;</span><br><span class="line">        sort(arr,<span class="number">0</span>, arr.length - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(T[] arr, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(l &gt;= r)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> i = partation1(arr, l, r);</span><br><span class="line">        sort(arr, l, i - <span class="number">1</span>);</span><br><span class="line">        sort(arr, i + <span class="number">1</span>, r);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//基准值为右边的</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">partation</span><span class="params">(T[] arr, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = l-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> j = r;</span><br><span class="line">        T t = arr[r];</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span>(less(arr[++i], t))&#123;</span><br><span class="line">                <span class="keyword">if</span>(i == r)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (less(t, arr[--j]))&#123;</span><br><span class="line">                <span class="keyword">if</span>(j == l)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(i &gt;= j)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            exch(arr, i , j);</span><br><span class="line">        &#125;</span><br><span class="line">        exch(arr, r, i);</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//基准值为左边的</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">partation1</span><span class="params">(T[] arr, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = l;</span><br><span class="line">        <span class="keyword">int</span> j = r + <span class="number">1</span>;</span><br><span class="line">        T t = arr[l];</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span>(less(arr[++i], t))&#123;</span><br><span class="line">                <span class="keyword">if</span>(i == r)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (less(t, arr[--j]))&#123;</span><br><span class="line">                <span class="keyword">if</span>(j == l)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(i &gt;= j)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            exch(arr, i , j);</span><br><span class="line">        &#125;</span><br><span class="line">        exch(arr, l, j);</span><br><span class="line">        <span class="keyword">return</span> j;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">less</span><span class="params">(T t1, T t2)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t1.compareTo(t2) &lt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">exch</span><span class="params">(T[] a, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        T tmp = a[i];</span><br><span class="line">        a[i] = a[j];</span><br><span class="line">        a[j] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(T[] arr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(T t : arr)&#123;</span><br><span class="line">            System.out.println(t);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      今天实在不想刷笔试题就把常见的排序手敲了一遍
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://suiwo.xyz/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构与算法" scheme="http://suiwo.xyz/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
      <category term="排序" scheme="http://suiwo.xyz/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>redis如何实现异步队列</title>
    <link href="http://suiwo.xyz/2019/02/14/redis%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%BC%82%E6%AD%A5%E9%98%9F%E5%88%97/"/>
    <id>http://suiwo.xyz/2019/02/14/redis如何实现异步队列/</id>
    <published>2019-02-14T02:02:20.000Z</published>
    <updated>2019-02-14T02:04:58.398Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-如何使用Redis做异步队列"><a href="#一-如何使用Redis做异步队列" class="headerlink" title="一.如何使用Redis做异步队列"></a>一.如何使用Redis做异步队列</h2><h3 id="1-使用List作为队列-RPUSH生产消息-LPOP消费消息"><a href="#1-使用List作为队列-RPUSH生产消息-LPOP消费消息" class="headerlink" title="1.使用List作为队列, RPUSH生产消息, LPOP消费消息"></a>1.使用List作为队列, RPUSH生产消息, LPOP消费消息</h3><p>➢缺点:没有等待队列里有值就直接消费<br>➢弥补:可以通过在应用层引入Sleep机制去调用LPOP重试</p><h3 id="2-BLPOP-key-key-timeout-阻塞直到队列有消息或者超时"><a href="#2-BLPOP-key-key-timeout-阻塞直到队列有消息或者超时" class="headerlink" title="2. BLPOP key [key .. timeout :阻塞直到队列有消息或者超时"></a>2. <code>BLPOP key [key .. timeout</code> :阻塞直到队列有消息或者超时</h3><p>➢缺点:只能供-一个消费者消费</p><h2 id="二-如何使用Redis做异步队列"><a href="#二-如何使用Redis做异步队列" class="headerlink" title="二.如何使用Redis做异步队列"></a>二.如何使用Redis做异步队列</h2><h3 id="pub-sub-主题订阅者模式"><a href="#pub-sub-主题订阅者模式" class="headerlink" title="pub/sub :主题订阅者模式"></a>pub/sub :主题订阅者模式</h3><ul><li>发送者(pub)发送消息,订阅者(sub)接收消息</li><li>订阅者可以订阅任意数量的频道<br>hex</li></ul><p><img src="/images/redis如何实现异步队列/4599D9D7-8657-4473-BFAF-9AAE44487A04.png" alt="这里写图片描述"></p><h5 id="下面我们就演示一下，首先我们打开三个终端，两个作为接收者，一个作为发送者，由下图可见当我们发送消息时只有指定的订阅者可以获取到消息"><a href="#下面我们就演示一下，首先我们打开三个终端，两个作为接收者，一个作为发送者，由下图可见当我们发送消息时只有指定的订阅者可以获取到消息" class="headerlink" title="下面我们就演示一下，首先我们打开三个终端，两个作为接收者，一个作为发送者，由下图可见当我们发送消息时只有指定的订阅者可以获取到消息"></a>下面我们就演示一下，首先我们打开三个终端，两个作为接收者，一个作为发送者，由下图可见当我们发送消息时只有指定的订阅者可以获取到消息</h5><p><img src="/images/redis如何实现异步队列/83848910-41A0-46B3-B876-A2CB6E8E5B07.png" alt="这里写图片描述"></p><h2 id="三-pub-sub的缺点"><a href="#三-pub-sub的缺点" class="headerlink" title="三.pub/sub的缺点"></a>三.pub/sub的缺点</h2><h5 id="消息的发布是无状态的-无法保证可达，若订阅者在发送者发布消息期间下线，之后我们再上线将无法接受到刚才发送的消息，解决办法就是使用消息队列"><a href="#消息的发布是无状态的-无法保证可达，若订阅者在发送者发布消息期间下线，之后我们再上线将无法接受到刚才发送的消息，解决办法就是使用消息队列" class="headerlink" title="消息的发布是无状态的,无法保证可达，若订阅者在发送者发布消息期间下线，之后我们再上线将无法接受到刚才发送的消息，解决办法就是使用消息队列"></a>消息的发布是无状态的,无法保证可达，若订阅者在发送者发布消息期间下线，之后我们再上线将无法接受到刚才发送的消息，解决办法就是使用消息队列</h5>]]></content>
    
    <summary type="html">
    
      本文是在看了慕课相关课程后对redis如何实现异步队列进行的相关总结
    
    </summary>
    
      <category term="数据库" scheme="http://suiwo.xyz/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="非关系型数据库" scheme="http://suiwo.xyz/tags/%E9%9D%9E%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="redis" scheme="http://suiwo.xyz/tags/redis/"/>
    
      <category term="异步队列" scheme="http://suiwo.xyz/tags/%E5%BC%82%E6%AD%A5%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>redis如何实现分布式锁</title>
    <link href="http://suiwo.xyz/2019/02/13/redis%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"/>
    <id>http://suiwo.xyz/2019/02/13/redis如何实现分布式锁/</id>
    <published>2019-02-13T15:32:00.000Z</published>
    <updated>2019-02-13T15:42:41.734Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-分布式锁需要解决的问题"><a href="#1-分布式锁需要解决的问题" class="headerlink" title="1.分布式锁需要解决的问题"></a>1.分布式锁需要解决的问题</h3><ul><li>互斥性：任意时刻只能有一个客户端拥有锁，不能同时多个客户端获取</li><li>安全性：锁只能被持有该锁的用户删除，而不能被其他用户删除</li><li>死锁：获取锁的客户端因为某些原因而宕机，而未能释放锁，其他客户端无法获取此锁，需要有机制来避免该类问题的发生</li><li>容错：当部分节点宕机，客户端仍能获取锁或者释放锁</li></ul><hr><h3 id="2-如何通过Redis实现分布式锁-非完善方法"><a href="#2-如何通过Redis实现分布式锁-非完善方法" class="headerlink" title="2.如何通过Redis实现分布式锁:(非完善方法)"></a>2.如何通过Redis实现分布式锁:(非完善方法)</h3><h5 id="SETNX-key-value-如果key不存在-则创建并赋值"><a href="#SETNX-key-value-如果key不存在-则创建并赋值" class="headerlink" title="SETNX key value :如果key不存在,则创建并赋值"></a><code>SETNX key value</code> :如果key不存在,则创建并赋值</h5><ul><li>时间复杂度: 0(1)</li><li>返回值:设置成功,返回1;设置失败,返回0。</li></ul><blockquote><p>但是此时我们获取的key是长期有效的，所以我们应该如何解决长期有效的问题呢？</p></blockquote><h4 id="如何解决SETNX长期有效的问题"><a href="#如何解决SETNX长期有效的问题" class="headerlink" title="如何解决SETNX长期有效的问题"></a>如何解决SETNX长期有效的问题</h4><h5 id="EXPIRE-key-seconds"><a href="#EXPIRE-key-seconds" class="headerlink" title="EXPIRE key seconds"></a><code>EXPIRE key seconds</code></h5><ul><li>设置key的生存时间,当key过期时(生存时间为0) ,会被自动删除</li><li>缺点：原子性得不到满足<h5 id="下面是伪代码"><a href="#下面是伪代码" class="headerlink" title="下面是伪代码"></a>下面是伪代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//该程序存在危险，如果执行到第二行就崩溃了，则此时key会被一直占用而无法被释放</span></span><br><span class="line">RedisService redisService = SpringUtils.getBean(Redi sService.class); </span><br><span class="line"><span class="keyword">long</span> status = redisService.setnx(key, <span class="string">"1"</span>);</span><br><span class="line"><span class="keyword">if</span>(status == <span class="number">1</span>) &#123;</span><br><span class="line">redisService.expire(key, expire);</span><br><span class="line"><span class="comment">//执行独占资源逻辑</span></span><br><span class="line">doOcuppiedWork();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="3-如何通过Redis实现分布式锁-正确方式"><a href="#3-如何通过Redis实现分布式锁-正确方式" class="headerlink" title="3.如何通过Redis实现分布式锁:(正确方式)"></a>3.如何通过Redis实现分布式锁:(正确方式)</h3><h5 id="SET-key-value-EX-seconds-PX-milliseconds-NX-XX"><a href="#SET-key-value-EX-seconds-PX-milliseconds-NX-XX" class="headerlink" title="SET key value [EX seconds] [PX milliseconds] [NX|XX]"></a><code>SET key value [EX seconds] [PX milliseconds] [NX|XX]</code></h5><ul><li>EX second :设置键的过期时间为second秒</li><li>PX millisecond :设置键的过期时间为millisecond毫秒</li><li>NX :只在键不存在时,才对键进行设置操作</li><li>XX:只在键已经存在时,才对键进行设置操作</li><li>SET操作成功完成时,返回OK ,否则返回nil<h5 id="下面是伪代码-1"><a href="#下面是伪代码-1" class="headerlink" title="下面是伪代码"></a>下面是伪代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">RedisService redisService = SpringUtils.getBean(RedisService.class); .</span><br><span class="line">String result = redisService.set(lockKey, requestId, SET_IF_NOT_EXIST, SET_WITH_EXPIRE_TIME, expireTime);</span><br><span class="line"><span class="keyword">if</span> (<span class="string">"OK"</span>.equals(result)) &#123;</span><br><span class="line"><span class="comment">//执行独占资源逻辑</span></span><br><span class="line">doOcuppiedWork();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="4-大量的key同时过期的注意事项"><a href="#4-大量的key同时过期的注意事项" class="headerlink" title="4.大量的key同时过期的注意事项"></a>4.大量的key同时过期的注意事项</h3><ul><li>集中过期,由于清除大量的key很耗时,会出现短暂的卡顿现象</li><li>解放方案:在设置key的过期时间的时候,给每个key加上随机值</li></ul>]]></content>
    
    <summary type="html">
    
      本文是在看了慕课相关课程后对redis如何实现分布式锁进行的相关总结
    
    </summary>
    
      <category term="数据库" scheme="http://suiwo.xyz/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="非关系型数据库" scheme="http://suiwo.xyz/tags/%E9%9D%9E%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="redis" scheme="http://suiwo.xyz/tags/redis/"/>
    
      <category term="锁" scheme="http://suiwo.xyz/tags/%E9%94%81/"/>
    
  </entry>
  
  <entry>
    <title>当前读与快照读</title>
    <link href="http://suiwo.xyz/2019/02/13/%E5%BD%93%E5%89%8D%E8%AF%BB%E4%B8%8E%E5%BF%AB%E7%85%A7%E8%AF%BB/"/>
    <id>http://suiwo.xyz/2019/02/13/当前读与快照读/</id>
    <published>2019-02-13T06:44:25.000Z</published>
    <updated>2019-02-13T06:49:04.007Z</updated>
    
    <content type="html"><![CDATA[<p>本文是根据慕课相关课程学习后，并总结了以下几篇博文后做的总结<br><a href="https://blog.csdn.net/silyvin/article/details/79280934" target="_blank" rel="noopener">https://blog.csdn.net/silyvin/article/details/79280934</a><br><a href="https://www.cnblogs.com/cat-and-water/p/6427612.html" target="_blank" rel="noopener">https://www.cnblogs.com/cat-and-water/p/6427612.html</a></p><p>innodb的默认事务隔离级别是rr（可重复读）。它的实现技术是mvcc。基于版本的控制协议。该技术不仅可以保证innodb的可重复读，而且可以防止幻读。但是它防止的是快照读，也就是读取的数据虽然是一致的，但是数据是历史数据。如何做到保证数据是一致的（也就是一个事务，其内部读取对应某一个数据的时候，数据都是一样的），同时读取的数据是最新的数据。innodb提供了一个间隙锁的技术。也就是结合GAP锁与行锁，达到最终目的。当使用索引进行插入的时候，innodb会将当前的节点和上一个节点加锁。这样当进行select的时候，就不允许加x锁。那么在进行该事务的时候，读取的就是最新的数据。</p><ul><li><p>快照读(snapshot read)</p><ul><li>不加锁的非阻塞读</li></ul><ul><li>当前读(current read)<ul><li>select … lock in share mode - select … lock in share mode<ul><li>select … for update</li><li>insert</li><li>update</li><li>delete</li></ul></li></ul></li></ul></li></ul><p>RC、RR级别下的InnoDB的非阻塞读如何实现</p><ul><li>数据行里的DB_TRX_ ID（事务ID）、DB_ ROLL_PTR（回滚指针）、DB_ROW_ ID（行号）字段</li><li>undo日志<ul><li>进行变更操作会产生undo日志，存储老版本数据</li><li>分为insert undo log（存储insert日志，只在事务回滚时需要，事务提交后即可删除）和update undo log（存储delete和update日志，不仅回滚需要，快照读也需要，不可随便删除）</li></ul></li></ul><p>下面我们看一下演示</p><p><img src="/images/当前读与快照读/E37DE40E-8196-44DB-BF4D-551FEDD630A8.png" alt="这里写图片描述"></p><p>上图为将field2字段由12改为32。此时我们将原数据存出来undo log，我们将回滚指针指向undo log的原数据，同时DB_TRX_ ID加1。如果我们之后进行回滚，则从undo log中获取数据，进行回滚。</p><p>同样下图为两个undo log日志</p><p><img src="/images/当前读与快照读/E944F1A3-D3FF-4C5C-81CB-9630DB68FA3F.png" alt="这里写图片描述"></p><p>InnoDB可重复读隔离级别下如何避免幻读</p><ul><li>表象:快照读(非阻塞读) –伪MVCC</li><li>内在: next-key锁(行锁+GAP锁)</li></ul><p>对主键索引或者唯一索引会用Gap锁吗？？</p><ul><li>如果where条件全部命中,则不会用Gap锁,只会加记录锁</li><li>如果where条件部分命中或者全不命中,则会加Gap锁</li></ul><p>如数据库中存在id为1，3，5的值，如果我们查询where id in (1,3); 此时我们会发现只有行锁，我们update id= 2;是成功的，但是如果我们查询where id in (1,4);  此时我们会发现有Gap锁，我们update id= 2;是无法成功的，只有等查询事务结束后才能update</p>]]></content>
    
    <summary type="html">
    
      本文是在看了慕课相关课程并阅读多篇博文后进行的当前读与快照读相关总结
    
    </summary>
    
      <category term="数据库" scheme="http://suiwo.xyz/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="http://suiwo.xyz/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="锁" scheme="http://suiwo.xyz/tags/%E9%94%81/"/>
    
      <category term="事务" scheme="http://suiwo.xyz/tags/%E4%BA%8B%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>数据库事务并发访问中的问题及隔离机制</title>
    <link href="http://suiwo.xyz/2019/02/01/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1%E5%B9%B6%E5%8F%91%E8%AE%BF%E9%97%AE%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E9%9A%94%E7%A6%BB%E6%9C%BA%E5%88%B6/"/>
    <id>http://suiwo.xyz/2019/02/01/数据库事务并发访问中的问题及隔离机制/</id>
    <published>2019-02-01T11:25:28.000Z</published>
    <updated>2019-02-01T15:20:49.708Z</updated>
    
    <content type="html"><![CDATA[<hr><h4 id="我们直接从隔离级别从低到高进行介绍"><a href="#我们直接从隔离级别从低到高进行介绍" class="headerlink" title="我们直接从隔离级别从低到高进行介绍"></a>我们直接从隔离级别从低到高进行介绍</h4><hr><h3 id="1-更新丢失"><a href="#1-更新丢失" class="headerlink" title="1.更新丢失"></a>1.更新丢失</h3><h4 id="目前主流数据库都会自动进行枷锁来避免，所以不好从数据库层面进行模拟，举个例子："><a href="#目前主流数据库都会自动进行枷锁来避免，所以不好从数据库层面进行模拟，举个例子：" class="headerlink" title="目前主流数据库都会自动进行枷锁来避免，所以不好从数据库层面进行模拟，举个例子："></a>目前主流数据库都会自动进行枷锁来避免，所以不好从数据库层面进行模拟，举个例子：</h4><table><thead><tr><th style="text-align:center">取款事务</th><th style="text-align:center">存款事务</th></tr></thead><tbody><tr><td style="text-align:center">开始事务</td><td style="text-align:center">开始事务</td></tr><tr><td style="text-align:center">查询转账余额为100元</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">查询转账余额为100元</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">存入20元,余额变为120元</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">提交事务</td></tr><tr><td style="text-align:center">取出10元,余额改为90元</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">回滚事务,余额恢复为100元</td><td style="text-align:center">更新丢失</td></tr></tbody></table><h4 id="从上表我们可以看出最终更新被覆盖导致了更新丢失"><a href="#从上表我们可以看出最终更新被覆盖导致了更新丢失" class="headerlink" title="从上表我们可以看出最终更新被覆盖导致了更新丢失"></a>从上表我们可以看出最终更新被覆盖导致了更新丢失</h4><hr><h3 id="2-脏读"><a href="#2-脏读" class="headerlink" title="2.脏读"></a>2.脏读</h3><h4 id="是指一个事务读取到了另一个事务未提交的数据"><a href="#是指一个事务读取到了另一个事务未提交的数据" class="headerlink" title="是指一个事务读取到了另一个事务未提交的数据"></a>是指一个事务读取到了另一个事务未提交的数据</h4><blockquote><p>如何解决：READ-COMMITTED事务隔离级别以上可避免</p></blockquote><h4 id="下面我们进行验证"><a href="#下面我们进行验证" class="headerlink" title="下面我们进行验证"></a>下面我们进行验证</h4><p>首先我们先使用下面的语句获取当前的事务隔离级别可知数据库的默认级别<code>REPEATABLE-READ</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select @@tx_isolation;#查询隔离级别</span><br></pre></td></tr></table></figure><p>下面我们使用下面的语句将当前事务的隔离级别设置为可读未提交<br><code>READ-UNCOMMITTED</code>(最低的事务隔离级别)</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set session transaction isolation level read uncommitted;#修改隔离界别为 可读未提交</span><br></pre></td></tr></table></figure><h4 id="下面我们模拟脏读"><a href="#下面我们模拟脏读" class="headerlink" title="下面我们模拟脏读"></a>下面我们模拟脏读</h4><h4 id="我们在数据库中先添加一个数据"><a href="#我们在数据库中先添加一个数据" class="headerlink" title="我们在数据库中先添加一个数据"></a>我们在数据库中先添加一个数据</h4><p><img src="/images/数据库事务并发访问中的问题及隔离机制/A7BC620F-9A19-4713-862D-B329006D7A2F.png" alt="这里写图片描述"></p><table><thead><tr><th style="text-align:left">模拟步骤</th></tr></thead><tbody><tr><td style="text-align:left">1. 首先我们新建两个控制台来模仿两个不同的事务并在两个控制台都执行下面的语句，并将事务隔离级别都改为<code>READ_UNCOMMITTED</code></td></tr><tr><td style="text-align:left">2. 我们在控制台1中使用<code>start transaction;</code>来开始我们的事务</td></tr><tr><td style="text-align:left">3. 我们使用<code>select * from learn_sql.learn_sql where id = 1;</code>此时我们查询到的money为初值300.</td></tr><tr><td style="text-align:left">4. 此时我们使用<code>update learn_sql.learn_sql set money = 400 where id = 1;</code>执行过此命令之后我们再执行<code>select * from learn_sql.learn_sql where id = 1;</code>会发现此时的money已经改成了400.</td></tr><tr><td style="text-align:left">5. 我们使用控制台2使用<code>select * from learn_sql.learn_sql where id = 1;</code>查询可知此时的money已经变成了还未提交的400元。</td></tr><tr><td style="text-align:left">6.若此时控制台1未使用<code>commit</code>进行提交，而是<code>rollback</code>进行事务回滚，则此时就是发生了控制台2读取了未成功提交的数据。</td></tr></tbody></table><blockquote><p>解决办法：使用下面的sql语句将事务隔离级别改为<code>READ_COMMITTED</code>，此时如果我们执行步骤4则会发现，控制台2获取的并不是400而是300。<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set session transaction isolation level read committed;#修改隔离界别为 只可读提交</span><br></pre></td></tr></table></figure></p></blockquote><hr><h3 id="3-不可重复读"><a href="#3-不可重复读" class="headerlink" title="3.不可重复读"></a>3.不可重复读</h3><h4 id="指事务1多次读取同一个数据，事务2在事务1多次读取过程中进行的修改提交，导致事务1多次读取的数据不同。"><a href="#指事务1多次读取同一个数据，事务2在事务1多次读取过程中进行的修改提交，导致事务1多次读取的数据不同。" class="headerlink" title="指事务1多次读取同一个数据，事务2在事务1多次读取过程中进行的修改提交，导致事务1多次读取的数据不同。"></a>指事务1多次读取同一个数据，事务2在事务1多次读取过程中进行的修改提交，导致事务1多次读取的数据不同。</h4><blockquote><p>如何解决：REPEATABLE-READ事务隔离级别以上可避免</p></blockquote><h4 id="下面我们开始模拟，首先我们先保证事务隔离级别为READ-COMMITTED"><a href="#下面我们开始模拟，首先我们先保证事务隔离级别为READ-COMMITTED" class="headerlink" title="下面我们开始模拟，首先我们先保证事务隔离级别为READ_COMMITTED"></a>下面我们开始模拟，首先我们先保证事务隔离级别为<code>READ_COMMITTED</code></h4><table><thead><tr><th style="text-align:left">模拟步骤</th></tr></thead><tbody><tr><td style="text-align:left">1.首先我们在控制台1中使用<code>start transaction;</code>开始事务，此时我们使用<code>select * from learn_sql.learn_sql where id = 1;</code>可知money为300，然后我们使用<code>update learn_sql.learn_sql set money = money + 100 where id = 1;</code></td></tr><tr><td style="text-align:left">2.此时我们使用控制台2中先使用<code>start transaction;</code>开始事务，再使用<code>select * from learn_sql.learn_sql where id = 1;</code>发现money为300。</td></tr><tr><td style="text-align:left">3.接着我们在控制台1使用<code>commit;</code>提交修改。这是我们控制台2中使用<code>select * from learn_sql.learn_sql where id = 1;</code>我们突然发现原来的300，突然变成了400.这就是发生了不可重复读的问题了，即多次查询结果不一致</td></tr></tbody></table><blockquote><p>解决办法：我们使用下面的sql语句将食物隔离级别修改为<code>REPEATABLE-READ</code><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> repeatable <span class="keyword">read</span>;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>这时我们在步骤3中获取的money仍然为300，但是如果我们使用<code>update learn_sql.learn_sql set money = money + 100 where id = 1;</code>后再查询会发现money不是我们最后一步查询的300+100=400元，而是我们控制台1提交之后的400+100=500元，这就防止了在一次事务中多次读不一致，同时可以保证该食物提交结果正确。</p></blockquote><hr><h3 id="4-幻读"><a href="#4-幻读" class="headerlink" title="4.幻读"></a>4.幻读</h3><h4 id="指事务1读取与搜索条件相匹配的若干行，事务2以插入或删除行的方式来修改事务1的结果集。"><a href="#指事务1读取与搜索条件相匹配的若干行，事务2以插入或删除行的方式来修改事务1的结果集。" class="headerlink" title="指事务1读取与搜索条件相匹配的若干行，事务2以插入或删除行的方式来修改事务1的结果集。"></a>指事务1读取与搜索条件相匹配的若干行，事务2以插入或删除行的方式来修改事务1的结果集。</h4><blockquote><p>如何解决：SERIALIZABLE事务隔离级别可避免</p></blockquote><h4 id="下面我们开始模拟，首先我们先保证事务隔离级别为READ-COMMITTED由于mysql在技术层面上避免了REPEATABLE-READ隔离级别下发生，但是理论上并不可避免"><a href="#下面我们开始模拟，首先我们先保证事务隔离级别为READ-COMMITTED由于mysql在技术层面上避免了REPEATABLE-READ隔离级别下发生，但是理论上并不可避免" class="headerlink" title="下面我们开始模拟，首先我们先保证事务隔离级别为READ_COMMITTED由于mysql在技术层面上避免了REPEATABLE-READ隔离级别下发生，但是理论上并不可避免"></a>下面我们开始模拟，首先我们先保证事务隔离级别为<code>READ_COMMITTED</code>由于mysql在技术层面上避免了<code>REPEATABLE-READ</code>隔离级别下发生，但是理论上并不可避免</h4><table><thead><tr><th style="text-align:left">模拟步骤</th></tr></thead><tbody><tr><td style="text-align:left">1.首先我们在控制台1中使用<code>start transaction;</code>开始事务，此时我们使用<code>select * from learn_sql.learn_sql;</code>可得到一条数据。</td></tr><tr><td style="text-align:left">2.此时我们使用控制台2中先使用<code>start transaction;</code>开始事务，再使用<code>insert into learn_sql.learn_sql (id,money);</code>接着我们在控制台2使用<code>commit;</code>提交修改。</td></tr><tr><td style="text-align:left">3.接着我们在控制台1使用<code>update learn_sql.learn_sql set money = 1000;</code>我们会发现这个时候我们修改的语句条数为两句，这与我们之前查询的一条不同，这就是幻读。</td></tr></tbody></table><blockquote><p>解决办法：把事务隔离级别修改为<code>SERIALIZABLE</code><br>之后我们会发现在执行第二步是会被lock住无法操作，从而避免了幻读。</p></blockquote><hr><h3 id="5-总结："><a href="#5-总结：" class="headerlink" title="5.总结："></a>5.总结：</h3><table><thead><tr><th>事务隔离级别</th><th>更新丢失</th><th>脏读</th><th>不可重复读</th><th>幻读</th></tr></thead><tbody><tr><td>未提交读</td><td>避免</td><td>发生</td><td>发生</td><td>发生</td></tr><tr><td>已提交读</td><td>避免</td><td>避免</td><td>发生</td><td>发生</td></tr><tr><td>可重复读</td><td>避免</td><td>避免</td><td>避免</td><td>发生</td></tr><tr><td>串行化</td><td>避免</td><td>避免</td><td>避免</td><td>避免</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      本文是在看了慕课相关课程后进行的数据库锁模块的事务并发访问产生的问题以及事务隔离机制的相关总结
    
    </summary>
    
      <category term="数据库" scheme="http://suiwo.xyz/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="http://suiwo.xyz/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="锁" scheme="http://suiwo.xyz/tags/%E9%94%81/"/>
    
      <category term="事务" scheme="http://suiwo.xyz/tags/%E4%BA%8B%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络相关知识总结之HTTP</title>
    <link href="http://suiwo.xyz/2019/02/01/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%E4%B9%8BHTTP/"/>
    <id>http://suiwo.xyz/2019/02/01/计算机网络相关知识总结之HTTP/</id>
    <published>2019-02-01T07:12:17.000Z</published>
    <updated>2019-02-02T02:19:51.573Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-HTTP简介"><a href="#1-HTTP简介" class="headerlink" title="1.HTTP简介"></a>1.HTTP简介</h4><h6 id="HTTP协议（HyperText-Transfer-Protocol，超文本传输协议）是因特网上应用最为广泛的一种网络传输协议，所有的WWW文件都必须遵守这个标准。HTTP是一个基于TCP-IP通信协议来传递数据（HTML-文件-图片文件-查询结果等）。"><a href="#HTTP协议（HyperText-Transfer-Protocol，超文本传输协议）是因特网上应用最为广泛的一种网络传输协议，所有的WWW文件都必须遵守这个标准。HTTP是一个基于TCP-IP通信协议来传递数据（HTML-文件-图片文件-查询结果等）。" class="headerlink" title="HTTP协议（HyperText Transfer Protocol，超文本传输协议）是因特网上应用最为广泛的一种网络传输协议，所有的WWW文件都必须遵守这个标准。HTTP是一个基于TCP/IP通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）。"></a>HTTP协议（HyperText Transfer Protocol，超文本传输协议）是因特网上应用最为广泛的一种网络传输协议，所有的WWW文件都必须遵守这个标准。HTTP是一个基于TCP/IP通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）。</h6><h6 id="HTTP三点注意事项："><a href="#HTTP三点注意事项：" class="headerlink" title="HTTP三点注意事项："></a>HTTP三点注意事项：</h6><blockquote><p>1.HTTP是无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。<br>2.HTTP是媒体独立的：这意味着，只要客户端和服务器知道如何处理的数据内容，任何类型的数据都可以通过HTTP发送。客户端以及服务器指定使用适合的MIME-type内容类型。<br>3.HTTP是无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</p></blockquote><hr><h4 id="2-HTTP消息结构"><a href="#2-HTTP消息结构" class="headerlink" title="2.HTTP消息结构"></a>2.HTTP消息结构</h4><h6 id="客户端请求消息：客户端发送一个HTTP请求到服务器的请求消息包括以下格式：请求行（request-line）、请求头部（header）、空行和请求数据四个部分组成，下图给出了请求报文的一般格式。"><a href="#客户端请求消息：客户端发送一个HTTP请求到服务器的请求消息包括以下格式：请求行（request-line）、请求头部（header）、空行和请求数据四个部分组成，下图给出了请求报文的一般格式。" class="headerlink" title="客户端请求消息：客户端发送一个HTTP请求到服务器的请求消息包括以下格式：请求行（request line）、请求头部（header）、空行和请求数据四个部分组成，下图给出了请求报文的一般格式。"></a>客户端请求消息：客户端发送一个HTTP请求到服务器的请求消息包括以下格式：请求行（request line）、请求头部（header）、空行和请求数据四个部分组成，下图给出了请求报文的一般格式。</h6><p><img src="/images/计算机网络相关知识总结之HTTP/2012072810301161.png" alt="这里写图片描述"><br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/hello.txt</span> HTTP/1.1</span><br><span class="line"><span class="attribute">User-Agent</span>: curl/7.16.3 libcurl/7.16.3 OpenSSL/0.9.7l zlib/1.2.3</span><br><span class="line"><span class="attribute">Host</span>: www.example.com</span><br><span class="line"><span class="attribute">Accept-Language</span>: en, mi</span><br></pre></td></tr></table></figure></p><h5 id="服务器响应消息：HTTP响应也由四个部分组成，分别是：状态行、消息报头、空行和响应正文。"><a href="#服务器响应消息：HTTP响应也由四个部分组成，分别是：状态行、消息报头、空行和响应正文。" class="headerlink" title="服务器响应消息：HTTP响应也由四个部分组成，分别是：状态行、消息报头、空行和响应正文。"></a>服务器响应消息：HTTP响应也由四个部分组成，分别是：状态行、消息报头、空行和响应正文。</h5><p><img src="/images/计算机网络相关知识总结之HTTP/httpmessage.jpg" alt="这里写图片描述"></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Date</span>: Mon, 27 Jul 2009 12:28:53 GMT</span><br><span class="line"><span class="attribute">Server</span>: Apache</span><br><span class="line"><span class="attribute">Last-Modified</span>: Wed, 22 Jul 2009 19:15:56 GMT</span><br><span class="line"><span class="attribute">ETag</span>: "34aa387-d-1568eb00"</span><br><span class="line"><span class="attribute">Accept-Ranges</span>: bytes</span><br><span class="line"><span class="attribute">Content-Length</span>: 51</span><br><span class="line"><span class="attribute">Vary</span>: Accept-Encoding</span><br><span class="line"><span class="attribute">Content-Type</span>: text/plain</span><br></pre></td></tr></table></figure><hr><h4 id="3-HTTP请求方法"><a href="#3-HTTP请求方法" class="headerlink" title="3.HTTP请求方法"></a>3.HTTP请求方法</h4><p>根据HTTP标准，HTTP请求可以使用多种请求方法。<br>HTTP1.0定义了三种请求方法： GET, POST 和 HEAD方法。<br>HTTP1.1新增了五种请求方法：OPTIONS, PUT, DELETE, TRACE 和 CONNECT 方法。</p><table><thead><tr><th>序号</th><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>GET</td><td>请求指定的页面信息，并返回实体主体。</td></tr><tr><td>2</td><td>HEAD</td><td>类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头</td></tr><tr><td>3</td><td>POST</td><td>向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。</td></tr><tr><td>4</td><td>PUT</td><td>从客户端向服务器传送的数据取代指定的文档的内容。</td></tr><tr><td>5</td><td>DELETE</td><td>请求服务器删除指定的页面。</td></tr><tr><td>6</td><td>CONNECT</td><td>HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。</td></tr><tr><td>7</td><td>OPTIONS</td><td>允许客户端查看服务器的性能。</td></tr><tr><td>8</td><td>TRACE</td><td>回显服务器收到的请求，主要用于测试或诊断。</td></tr></tbody></table><hr><h4 id="4-HTTP常见状态码"><a href="#4-HTTP常见状态码" class="headerlink" title="4.HTTP常见状态码"></a>4.HTTP常见状态码</h4><table><thead><tr><th>状态码</th><th>状态码英文名称</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>OK</td><td>正常返回信息</td></tr><tr><td>400</td><td>Bad Request</td><td>客户端请求有语法错误，不能被服务器所理解</td></tr><tr><td>401</td><td>Unauthorized</td><td>请求未经授权，这个状态代码必须和WWW-Authenticate报头域- - 起使用</td></tr><tr><td>403</td><td>Forbidden</td><td>服务器收到请求，但是拒绝提供服务</td></tr><tr><td>404</td><td>Not Found</td><td>请求资源不存在，eg, 输入了错误的URL</td></tr><tr><td>500</td><td>Internal Server Error</td><td>服务器发生不可预期的错误</td></tr><tr><td>503</td><td>Server Unavailable</td><td>服务器当前不能处理客户端的请求，一段时间后可能恢复正常</td></tr></tbody></table><hr><h4 id="5-HTTP中POST与GET的区别"><a href="#5-HTTP中POST与GET的区别" class="headerlink" title="5.HTTP中POST与GET的区别"></a>5.HTTP中POST与GET的区别</h4><p>从三个层面来解答：</p><blockquote><p>1.从Http报文层面: GET将请求信息放在URL , POST放在报文体中<br>2.数据库层面: CET符合幂等性和安全性, POST不符合<br>3.其他层面: GET可以被缓存、被存储,而POST不行</p></blockquote>]]></content>
    
    <summary type="html">
    
      本文是听了慕课计网相关课程后参考了菜鸟教程进行的总结
    
    </summary>
    
      <category term="计算机基础" scheme="http://suiwo.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="计算机网络" scheme="http://suiwo.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>前后端通过Json传数据，并将Json转化成实体类</title>
    <link href="http://suiwo.xyz/2019/01/23/%E5%89%8D%E5%90%8E%E7%AB%AF%E9%80%9A%E8%BF%87Json%E4%BC%A0%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%B9%B6%E5%B0%86Json%E8%BD%AC%E5%8C%96%E6%88%90%E5%AE%9E%E4%BD%93%E7%B1%BB/"/>
    <id>http://suiwo.xyz/2019/01/23/前后端通过Json传数据，并将Json转化成实体类/</id>
    <published>2019-01-23T12:18:38.000Z</published>
    <updated>2019-01-23T12:50:48.140Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>今天尝试着用thymeleaf写马上就要使用的计算机基础知识大赛的比赛系统，然后卡在如何将多个对象通过form表单发送给后端，最后没有找到比较好的办法，只能使用js将需要发送的数据转化成Json然后使用ajax发送请求。然后在后台在将数据转化成实体类</p></blockquote><h6 id="首先我们的实体类如下"><a href="#首先我们的实体类如下" class="headerlink" title="首先我们的实体类如下:"></a>首先我们的实体类如下:</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.njupt.sacc.cbkc.problem.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProblemResult</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> Integer uid;</span><br><span class="line">    <span class="keyword">private</span> Integer pid;</span><br><span class="line">    <span class="keyword">private</span> String result;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getUid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> uid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUid</span><span class="params">(Integer uid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.uid = uid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getPid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPid</span><span class="params">(Integer pid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pid = pid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getResult</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setResult</span><span class="params">(String result)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.result = result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"ProblemResult&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", uid="</span> + uid +</span><br><span class="line">                <span class="string">", pid="</span> + pid +</span><br><span class="line">                <span class="string">", result='"</span> + result + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="然后我们的目标就是前端向后端发送多个ProblemResult对象，然后在进行处理，首先我们看前端的实现方案（此时后端向前端发送的是一个List）："><a href="#然后我们的目标就是前端向后端发送多个ProblemResult对象，然后在进行处理，首先我们看前端的实现方案（此时后端向前端发送的是一个List）：" class="headerlink" title="然后我们的目标就是前端向后端发送多个ProblemResult对象，然后在进行处理，首先我们看前端的实现方案（此时后端向前端发送的是一个List）："></a>然后我们的目标就是前端向后端发送多个ProblemResult对象，然后在进行处理，首先我们看前端的实现方案（此时后端向前端发送的是一个List<problem>）：</problem></h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span> xmlns:th=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="http:/</span><span class="regexp">/apps.bdimg.com/</span>libs/jquery/<span class="number">2.1</span><span class="number">.4</span>/jquery.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;hr&gt;</span></span><br><span class="line"><span class="string">&lt;div th:each="</span>problem : $&#123;problems&#125;<span class="string">"&gt;</span></span><br><span class="line"><span class="string">    &lt;span th:text="</span>$&#123;problem.id&#125;<span class="string">"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;form th:object="</span>$&#123;problem&#125;<span class="string">" th:if="</span>$&#123;problem.isSingle == <span class="number">1</span>&#125;<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;input type="</span>radio<span class="string">" th:name="</span>$&#123;problem.id&#125;<span class="string">" th:text="</span>$&#123;problem.aOption&#125;<span class="string">" value="</span>a<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;input type="</span>radio<span class="string">" th:name="</span>$&#123;problem.id&#125;<span class="string">" th:text="</span>$&#123;problem.bOption&#125;<span class="string">" value="</span>b<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;input type="</span>radio<span class="string">" th:name="</span>$&#123;problem.id&#125;<span class="string">" th:text="</span>$&#123;problem.cOption&#125;<span class="string">" value="</span>c<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;input type="</span>radio<span class="string">" th:name="</span>$&#123;problem.id&#125;<span class="string">" th:text="</span>$&#123;problem.dOption&#125;<span class="string">" value="</span>d<span class="string">"&gt;</span></span><br><span class="line"><span class="string">    &lt;/form&gt;</span></span><br><span class="line"><span class="string">    &lt;form th:object="</span>$&#123;problem&#125;<span class="string">" th:if="</span>$&#123;problem.isSingle == <span class="number">0</span>&#125;<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;input type="</span>checkbox<span class="string">" th:name="</span>$&#123;problem.id&#125;<span class="string">" th:text="</span>$&#123;problem.aOption&#125;<span class="string">" value="</span>a<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;input type="</span>checkbox<span class="string">" th:name="</span>$&#123;problem.id&#125;<span class="string">" th:text="</span>$&#123;problem.bOption&#125;<span class="string">" value="</span>b<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;input type="</span>checkbox<span class="string">" th:name="</span>$&#123;problem.id&#125;<span class="string">" th:text="</span>$&#123;problem.cOption&#125;<span class="string">" value="</span>c<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;input type="</span>checkbox<span class="string">" th:name="</span>$&#123;problem.id&#125;<span class="string">" th:text="</span>$&#123;problem.dOption&#125;<span class="string">" value="</span>d<span class="string">"&gt;</span></span><br><span class="line"><span class="string">    &lt;/form&gt;</span></span><br><span class="line"><span class="string">    &lt;hr&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;button name="</span>save<span class="string">" onclick="</span>loadXMLDoc(name)<span class="string">"&gt;保存&lt;/button&gt;</span></span><br><span class="line"><span class="string">&lt;button name="</span>push<span class="string">" onclick="</span>loadXMLDoc(name)<span class="string">"&gt;提交&lt;/button&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;script type="</span>text/javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">    //将答案转化成Json格式</span></span><br><span class="line"><span class="string">    //name用来判断是保存操作还是提交操作</span></span><br><span class="line"><span class="string">    function f(name) &#123;</span></span><br><span class="line"><span class="string">        var json = [];</span></span><br><span class="line"><span class="string">        //[[$[count]]]为thymeleaf中js获取值的方法</span></span><br><span class="line"><span class="string">        var count = [[$&#123;count&#125;]];</span></span><br><span class="line"><span class="string">        for (var i = 1; i &lt;= count; i++) &#123;</span></span><br><span class="line"><span class="string">            var type = document.getElementsByName(i).item(0).getAttribute("</span>type<span class="string">");</span></span><br><span class="line"><span class="string">            //js获取单选框的值</span></span><br><span class="line"><span class="string">            if (type == "</span>radio<span class="string">") &#123;</span></span><br><span class="line"><span class="string">                var radio = document.getElementsByName(i);</span></span><br><span class="line"><span class="string">                var result = "</span><span class="string">";</span></span><br><span class="line"><span class="string">                for (var j = 0; j &lt; radio.length; j++) &#123;</span></span><br><span class="line"><span class="string">                    if (radio[j].checked) &#123;</span></span><br><span class="line"><span class="string">                        result = radio[j].value;</span></span><br><span class="line"><span class="string">                        break;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &#125; else &#123;//js获取多选框的值</span></span><br><span class="line"><span class="string">                var checkbox = document.getElementsByName(i);</span></span><br><span class="line"><span class="string">                var result = "</span><span class="string">";</span></span><br><span class="line"><span class="string">                for (var j = 0; j &lt; checkbox.length; j++) &#123;</span></span><br><span class="line"><span class="string">                    if (checkbox[j].checked)</span></span><br><span class="line"><span class="string">                        result = result + checkbox[j].value;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            var row = &#123;"</span>pid<span class="string">": i, "</span>result<span class="string">": result&#125;;</span></span><br><span class="line"><span class="string">            json.push(row);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        return &#123;"</span>type<span class="string">":name,"</span>data<span class="string">":json&#125;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    //发送ajax请求</span></span><br><span class="line"><span class="string">    function loadXMLDoc(name) &#123;</span></span><br><span class="line"><span class="string">        var xmlhttp;</span></span><br><span class="line"><span class="string">        if (window.XMLHttpRequest) &#123;</span></span><br><span class="line"><span class="string">            //  IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码</span></span><br><span class="line"><span class="string">            xmlhttp = new XMLHttpRequest();</span></span><br><span class="line"><span class="string">        &#125; else &#123;</span></span><br><span class="line"><span class="string">            // IE6, IE5 浏览器执行代码</span></span><br><span class="line"><span class="string">            xmlhttp = new ActiveXObject("</span>Microsoft.XMLHTTP<span class="string">");</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        xmlhttp.onreadystatechange = function () &#123;</span></span><br><span class="line"><span class="string">            if (xmlhttp.readyState == 4 &amp;&amp; xmlhttp.status == 200) &#123;</span></span><br><span class="line"><span class="string">                console.log("</span>successful<span class="string">");</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;;</span></span><br><span class="line"><span class="string">        xmlhttp.open("</span>POST<span class="string">", "</span>/test<span class="string">", true);</span></span><br><span class="line"><span class="string">        xmlhttp.setRequestHeader("</span>Content-Type<span class="string">", "</span>application/json<span class="string">");</span></span><br><span class="line"><span class="string">        var data = f(name);</span></span><br><span class="line"><span class="string">        xmlhttp.send(JSON.stringify(data));</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><h6 id="传送的数据示例大致如下"><a href="#传送的数据示例大致如下" class="headerlink" title="传送的数据示例大致如下:"></a>传送的数据示例大致如下:</h6><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"submit"</span>:[</span><br><span class="line">&#123;<span class="attr">"pid"</span>:<span class="number">1</span>,<span class="attr">"result"</span>:<span class="string">"a"</span>&#125;,</span><br><span class="line">&#123;<span class="attr">"pid"</span>:<span class="number">2</span>,<span class="attr">"result"</span>:<span class="string">"ab"</span>&#125;,</span><br><span class="line">&#123;<span class="attr">"pid"</span>:<span class="number">3</span>,<span class="attr">"result"</span>:<span class="string">""</span>&#125;,</span><br><span class="line">&#123;<span class="attr">"pid"</span>:<span class="number">4</span>,<span class="attr">"result"</span>:<span class="string">"abcd"</span>&#125;,</span><br><span class="line">&#123;<span class="attr">"pid"</span>:<span class="number">5</span>,<span class="attr">"result"</span>:<span class="string">"a"</span>&#125;,</span><br><span class="line">&#123;<span class="attr">"pid"</span>:<span class="number">6</span>,<span class="attr">"result"</span>:<span class="string">"d"</span>&#125;,</span><br><span class="line">&#123;<span class="attr">"pid"</span>:<span class="number">7</span>,<span class="attr">"result"</span>:<span class="string">"b"</span>&#125;,</span><br><span class="line">&#123;<span class="attr">"pid"</span>:<span class="number">8</span>,<span class="attr">"result"</span>:<span class="string">"c"</span>&#125;</span><br><span class="line">],</span><br><span class="line"><span class="attr">"type"</span>:<span class="string">"save"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="之后我们看后端如何获取数据并将数据转化成实体类："><a href="#之后我们看后端如何获取数据并将数据转化成实体类：" class="headerlink" title="之后我们看后端如何获取数据并将数据转化成实体类："></a>之后我们看后端如何获取数据并将数据转化成实体类：</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/test"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">submit</span><span class="params">(@RequestBody JSONObject jsonObject)</span></span>&#123;</span><br><span class="line">        <span class="comment">//通过key获取前端发送的json的数组</span></span><br><span class="line">        JSONArray problemResults = jsonObject.getJSONArray(<span class="string">"data"</span>);</span><br><span class="line">        <span class="comment">//通过key获取前端发送的json中的type字段</span></span><br><span class="line">        String submitType = String.valueOf(jsonObject.get(<span class="string">"type"</span>));</span><br><span class="line">        List&lt;ProblemResult&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//通过遍历将json数据中的数据转化成实体类</span></span><br><span class="line">        <span class="keyword">for</span> (Object problemResult : problemResults) &#123;</span><br><span class="line">            <span class="comment">//会用JSONObject包中的函数将字符串转化成实体类</span></span><br><span class="line">            ProblemResult result = (ProblemResult) JSONObject.toJavaObject((JSONObject) problemResult, ProblemResult.class);</span><br><span class="line">            list.add(result);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>经过上面的操作，我们就成功的完成了前端向后端发送多个对象，整体思想大概就是先把需要传的所有对象看成一个数组，然后传到后端之后再对json数据进行解析，然后获取数据中的json字符串，然后通过json库中的函数将json字符串转化成实体类，全部完成</p></blockquote><h5 id="参考博文："><a href="#参考博文：" class="headerlink" title="参考博文："></a>参考博文：</h5><blockquote><p>阿里巴巴的JSONObject对象转换 <a href="https://blog.csdn.net/a990914093/article/details/81217581" target="_blank" rel="noopener">https://blog.csdn.net/a990914093/article/details/81217581</a><br>JSONObject如何转换成实体类型<br><a href="https://blog.csdn.net/m0_38129335/article/details/80047034" target="_blank" rel="noopener">https://blog.csdn.net/m0_38129335/article/details/80047034</a><br>json数据与实体类之间的相互转换<br><a href="https://blog.csdn.net/nandao158/article/details/71122851" target="_blank" rel="noopener">https://blog.csdn.net/nandao158/article/details/71122851</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      本文是在尝试集成Springboot与Thymleaf是在前后端数据交互时遇到的问题，以及解决方案
    
    </summary>
    
      <category term="Springboot" scheme="http://suiwo.xyz/categories/Springboot/"/>
    
    
      <category term="Springboot" scheme="http://suiwo.xyz/tags/Springboot/"/>
    
      <category term="Thymeleaf" scheme="http://suiwo.xyz/tags/Thymeleaf/"/>
    
  </entry>
  
  <entry>
    <title>springboot集成MyBatis</title>
    <link href="http://suiwo.xyz/2018/11/27/springboot%E9%9B%86%E6%88%90MyBatis/"/>
    <id>http://suiwo.xyz/2018/11/27/springboot集成MyBatis/</id>
    <published>2018-11-27T09:15:37.000Z</published>
    <updated>2018-11-27T14:52:29.348Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h3><blockquote><p>MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 POJOs(Plain Old Java Objects,普通的 Java对象)映射成数据库中的记录。</p></blockquote><hr><h3 id="二、创建项目"><a href="#二、创建项目" class="headerlink" title="二、创建项目"></a>二、创建项目</h3><h5 id="使用idea创建空项目并记得选择web，mysql，mybaties这几个依赖即可，在此就不赘述了，创建后包依赖大致如下："><a href="#使用idea创建空项目并记得选择web，mysql，mybaties这几个依赖即可，在此就不赘述了，创建后包依赖大致如下：" class="headerlink" title="使用idea创建空项目并记得选择web，mysql，mybaties这几个依赖即可，在此就不赘述了，创建后包依赖大致如下："></a>使用idea创建空项目并记得选择web，mysql，mybaties这几个依赖即可，在此就不赘述了，创建后包依赖大致如下：</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="三、在yml配置中添加相关配置"><a href="#三、在yml配置中添加相关配置" class="headerlink" title="三、在yml配置中添加相关配置"></a>三、在yml配置中添加相关配置</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">jdbc:mysql://localhost:3306/test</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    password:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 之后的填写mybatis的mapper书写路径</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line"><span class="attr">  mapper-locations:</span> <span class="attr">classpath:mapper/*.xml</span></span><br></pre></td></tr></table></figure><hr><h3 id="四、创建一个实体类"><a href="#四、创建一个实体类" class="headerlink" title="四、创建一个实体类"></a>四、创建一个实体类</h3><p>SysUserEntity.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.gausscode.calo.user.entity;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysUserEntity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String loginName;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> tel;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String picUrl;</span><br><span class="line">    <span class="keyword">private</span> String siteId;</span><br><span class="line">    <span class="keyword">private</span> Date createDate;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> createBy;</span><br><span class="line">    <span class="keyword">private</span> Date updateDate;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> updateId;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> delFlag;</span><br><span class="line">    <span class="keyword">private</span> String remarks;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getLoginName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> loginName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLoginName</span><span class="params">(String loginName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.loginName = loginName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getTel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tel;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTel</span><span class="params">(<span class="keyword">int</span> tel)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tel = tel;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPicUrl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> picUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPicUrl</span><span class="params">(String picUrl)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.picUrl = picUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSiteId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> siteId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSiteId</span><span class="params">(String siteId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.siteId = siteId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getCreateDate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> createDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCreateDate</span><span class="params">(Date createDate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.createDate = createDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCreateBy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> createBy;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCreateBy</span><span class="params">(<span class="keyword">int</span> createBy)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.createBy = createBy;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getUpdateDate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> updateDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUpdateDate</span><span class="params">(Date updateDate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.updateDate = updateDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getUpdateId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> updateId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUpdateId</span><span class="params">(<span class="keyword">int</span> updateId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.updateId = updateId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getDelFlag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> delFlag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDelFlag</span><span class="params">(<span class="keyword">int</span> delFlag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.delFlag = delFlag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRemarks</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> remarks;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRemarks</span><span class="params">(String remarks)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.remarks = remarks;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"SysUserEntity&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", loginName='"</span> + loginName + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", email='"</span> + email + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", tel="</span> + tel +</span><br><span class="line">                <span class="string">", password='"</span> + password + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", picUrl='"</span> + picUrl + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", siteId='"</span> + siteId + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", createDate="</span> + createDate +</span><br><span class="line">                <span class="string">", createBy="</span> + createBy +</span><br><span class="line">                <span class="string">", updateDate="</span> + updateDate +</span><br><span class="line">                <span class="string">", updateId="</span> + updateId +</span><br><span class="line">                <span class="string">", delFlag="</span> + delFlag +</span><br><span class="line">                <span class="string">", remarks='"</span> + remarks + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="五、创建一个dao层，service层以及controller层"><a href="#五、创建一个dao层，service层以及controller层" class="headerlink" title="五、创建一个dao层，service层以及controller层"></a>五、创建一个dao层，service层以及controller层</h3><p>SysUserDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.gausscode.calo.user.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.gausscode.calo.user.entity.SysUserEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SysUserDao</span> </span>&#123;</span><br><span class="line">    <span class="function">SysUserEntity <span class="title">get</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(SysUserEntity sysUserEntity)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(SysUserEntity sysUserEntity)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SysUserController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.gausscode.calo.user.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.gausscode.calo.user.service.SysUserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysUserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    SysUserService sysUserService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/get"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">get</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> id = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> sysUserService.get(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/insert"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">insert</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sysUserService.insert().toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/delete"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">()</span></span>&#123;</span><br><span class="line">        sysUserService.delete();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"successful delete"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">update</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sysUserService.update();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SysUserService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.gausscode.calo.user.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.gausscode.calo.user.dao.SysUserDao;</span><br><span class="line"><span class="keyword">import</span> cn.gausscode.calo.user.entity.SysUserEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysUserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    SysUserDao sysUserDao;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">get</span><span class="params">(<span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sysUserDao.get(id).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SysUserEntity <span class="title">insert</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SysUserEntity sysUserEntity = <span class="keyword">new</span> SysUserEntity();</span><br><span class="line">        sysUserEntity.setName(<span class="string">"name"</span>);</span><br><span class="line">        sysUserEntity.setLoginName(<span class="string">"loginName"</span>);</span><br><span class="line">        sysUserEntity.setEmail(<span class="string">"email"</span>);</span><br><span class="line">        sysUserEntity.setTel(<span class="number">123</span>);</span><br><span class="line">        sysUserEntity.setPassword(<span class="string">"password"</span>);</span><br><span class="line">        sysUserEntity.setPicUrl(<span class="string">"pic_url"</span>);</span><br><span class="line">        sysUserEntity.setSiteId(<span class="string">"site_id"</span>);</span><br><span class="line">        SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">        sysUserEntity.setCreateDate(<span class="keyword">new</span> Date());</span><br><span class="line">        sysUserEntity.setCreateBy(<span class="number">1</span>);</span><br><span class="line">        sysUserEntity.setDelFlag(<span class="number">1</span>);</span><br><span class="line">        sysUserEntity.setRemarks(<span class="string">"remarks"</span>);</span><br><span class="line">        sysUserDao.insert(sysUserEntity);</span><br><span class="line">        <span class="keyword">return</span> sysUserEntity;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span></span>&#123;</span><br><span class="line">        sysUserDao.delete(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">update</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SysUserEntity sysUserEntity = <span class="keyword">new</span> SysUserEntity();</span><br><span class="line">        sysUserEntity.setId(<span class="number">1</span>);</span><br><span class="line">        sysUserEntity.setName(<span class="string">"name1"</span>);</span><br><span class="line">        sysUserEntity.setLoginName(<span class="string">"loginName1"</span>);</span><br><span class="line">        sysUserEntity.setEmail(<span class="string">"email1"</span>);</span><br><span class="line">        sysUserEntity.setTel(<span class="number">1231</span>);</span><br><span class="line">        sysUserEntity.setPassword(<span class="string">"password1"</span>);</span><br><span class="line">        sysUserEntity.setPicUrl(<span class="string">"pic_url1"</span>);</span><br><span class="line">        sysUserEntity.setSiteId(<span class="string">"site_id1"</span>);</span><br><span class="line">        SimpleDateFormat df = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss1"</span>);</span><br><span class="line">        sysUserEntity.setCreateDate(<span class="keyword">new</span> Date());</span><br><span class="line">        sysUserEntity.setCreateBy(<span class="number">11</span>);</span><br><span class="line">        sysUserEntity.setDelFlag(<span class="number">11</span>);</span><br><span class="line">        sysUserEntity.setRemarks(<span class="string">"remarks1"</span>);</span><br><span class="line">        sysUserDao.update(sysUserEntity);</span><br><span class="line">        <span class="keyword">return</span> sysUserDao.get(<span class="number">1</span>).toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="六、书写mybatis的mapper"><a href="#六、书写mybatis的mapper" class="headerlink" title="六、书写mybatis的mapper"></a>六、书写mybatis的mapper</h3><p>SysUserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"cn.gausscode.calo.user.dao.SysUserDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"get"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"cn.gausscode.calo.user.entity.SysUserEntity"</span>&gt;</span></span><br><span class="line">        select * from sys_user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"insert"</span> <span class="attr">parameterType</span>=<span class="string">"cn.gausscode.calo.user.entity.SysUserEntity"</span>&gt;</span></span><br><span class="line">        insert into sys_user (name,login_name,email,tel,password,pic_url,site_id,create_date,create_by,update_date,update_by,del_flag,remarks)</span><br><span class="line">                values (#&#123;name&#125;,#&#123;loginName&#125;,#&#123;email&#125;,#&#123;tel&#125;,#&#123;password&#125;,#&#123;picUrl&#125;,#&#123;siteId&#125;,#&#123;createDate&#125;,#&#123;createBy&#125;,#&#123;updateDate&#125;,#&#123;updateId&#125;,#&#123;delFlag&#125;,#&#123;remarks&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"delete"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">        update sys_user set del_flag = 0 where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"update"</span> <span class="attr">parameterType</span>=<span class="string">"cn.gausscode.calo.user.entity.SysUserEntity"</span>&gt;</span></span><br><span class="line">        update sys_user set</span><br><span class="line">            name = #&#123;name&#125;,</span><br><span class="line">            login_name = #&#123;loginName&#125;,</span><br><span class="line">            email = #&#123;email&#125;,</span><br><span class="line">            tel = #&#123;tel&#125;,</span><br><span class="line">            password = #&#123;password&#125;,</span><br><span class="line">            pic_url = #&#123;picUrl&#125;,</span><br><span class="line">            site_id = #&#123;siteId&#125;,</span><br><span class="line">            create_date = #&#123;createDate&#125;,</span><br><span class="line">            create_by = #&#123;createBy&#125;,</span><br><span class="line">            update_date = #&#123;updateDate&#125;,</span><br><span class="line">            update_by = #&#123;updateId&#125;,</span><br><span class="line">            del_flag = #&#123;delFlag&#125;,</span><br><span class="line">            remarks = #&#123;remarks&#125;</span><br><span class="line">        where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="至此增删改查功能就完成了"><a href="#至此增删改查功能就完成了" class="headerlink" title="至此增删改查功能就完成了"></a>至此增删改查功能就完成了</h5><hr><h3 id="七、总结"><a href="#七、总结" class="headerlink" title="七、总结"></a>七、总结</h3><p>下面这个是整个项目的结构图</p><p><img src="/images/springboot集成MyBatis/ADDA67C5-4421-4F7C-826B-766735DF3EF2.png" alt="这里写图片描述"></p><blockquote><p>整体来说，mybatis可以大量减少了在sql代码部分的心思，特别是动态sql部分，简直太棒了，不过还没有完全学完，只是今天写了一个demo，之后会慢慢地把整个mybatis系统的学习总结一下</p></blockquote>]]></content>
    
    <summary type="html">
    
      MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 POJOs(Plain Old Java Objects,普通的 Java对象)映射成数据库中的记录。
    
    </summary>
    
      <category term="Springboot" scheme="http://suiwo.xyz/categories/Springboot/"/>
    
    
      <category term="Java" scheme="http://suiwo.xyz/tags/Java/"/>
    
      <category term="Springboot" scheme="http://suiwo.xyz/tags/Springboot/"/>
    
  </entry>
  
  <entry>
    <title>Swagger报错:java.lang.NumberFormatException: For input string: &quot;&quot;</title>
    <link href="http://suiwo.xyz/2018/11/15/Swagger%E6%8A%A5%E9%94%99-java-lang-NumberFormatException-For-input-string/"/>
    <id>http://suiwo.xyz/2018/11/15/Swagger报错-java-lang-NumberFormatException-For-input-string/</id>
    <published>2018-11-15T02:17:14.000Z</published>
    <updated>2018-11-16T14:19:39.039Z</updated>
    
    <content type="html"><![CDATA[<h5 id="使用Swagger和Springfox，我们编写了REST-API，我们编写了更多可访问的API。当您运行该应用程序时，您可能会遇到一个奇怪的异常，如下所示："><a href="#使用Swagger和Springfox，我们编写了REST-API，我们编写了更多可访问的API。当您运行该应用程序时，您可能会遇到一个奇怪的异常，如下所示：" class="headerlink" title="使用Swagger和Springfox，我们编写了REST API，我们编写了更多可访问的API。当您运行该应用程序时，您可能会遇到一个奇怪的异常，如下所示："></a>使用Swagger和Springfox，我们编写了REST API，我们编写了更多可访问的API。当您运行该应用程序时，您可能会遇到一个奇怪的异常，如下所示：</h5><p><code>java.lang.NumberFormatException: For input string: &quot;&quot;</code></p><h5 id="这似乎是一个错误，所以你可以忽略那个。如果它让您烦恼，您可以随时更改该文件的日志记录级别，就像他们在该问题中提出的那样。您也可以在application-properties或application-yml中执行此操作："><a href="#这似乎是一个错误，所以你可以忽略那个。如果它让您烦恼，您可以随时更改该文件的日志记录级别，就像他们在该问题中提出的那样。您也可以在application-properties或application-yml中执行此操作：" class="headerlink" title="这似乎是一个错误，所以你可以忽略那个。如果它让您烦恼，您可以随时更改该文件的日志记录级别，就像他们在该问题中提出的那样。您也可以在application.properties或application.yml中执行此操作："></a>这似乎是一个错误，所以你可以忽略那个。如果它让您烦恼，您可以随时更改该文件的日志记录级别，就像他们在该问题中提出的那样。您也可以在<code>application.properties</code>或<code>application.yml</code>中执行此操作：</h5><blockquote><p>application.properties<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">logging.level.io.swagger.models.parameters.AbstractSerializableParameter=error</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>application.yml</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">  level:</span></span><br><span class="line">    <span class="string">io.swagger.models.parameters.AbstractSerializableParameter:</span> <span class="string">error</span></span><br></pre></td></tr></table></figure><hr><p>参考文章：<a href="https://g00glen00b.be/documenting-rest-api-swagger-springfox/" target="_blank" rel="noopener">https://g00glen00b.be/documenting-rest-api-swagger-springfox/</a></p><hr>]]></content>
    
    <summary type="html">
    
      运行Springboot的时候总是会报错，本以为是那里写的有bug结果发现是Swagger出现的问题，只要把log等级修改一下即可
    
    </summary>
    
      <category term="Springboot" scheme="http://suiwo.xyz/categories/Springboot/"/>
    
    
      <category term="Java" scheme="http://suiwo.xyz/tags/Java/"/>
    
      <category term="Springboot" scheme="http://suiwo.xyz/tags/Springboot/"/>
    
      <category term="Swagger" scheme="http://suiwo.xyz/tags/Swagger/"/>
    
  </entry>
  
  <entry>
    <title>Springboot集成Swagger2</title>
    <link href="http://suiwo.xyz/2018/11/14/Springboot%E9%9B%86%E6%88%90Swagger2/"/>
    <id>http://suiwo.xyz/2018/11/14/Springboot集成Swagger2/</id>
    <published>2018-11-14T12:52:33.000Z</published>
    <updated>2018-11-15T02:16:22.438Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Springboot集成Swagger2"><a href="#Springboot集成Swagger2" class="headerlink" title="Springboot集成Swagger2"></a>Springboot集成Swagger2</h2><hr><h4 id="一、介绍："><a href="#一、介绍：" class="headerlink" title="一、介绍："></a>一、介绍：</h4><blockquote><p>Swagger是一个功能强大且易于使用的API开发人员工具套件，适用于团队和个人，支持从整个API生命周期（从设计和文档到测试和部署）的开发。<br>Swagger由开源，免费和商用工具组成，允许任何人，从技术工程师到街头智能产品经理，构建每个人都喜欢的令人惊叹的API。<br>Swagger最初是作为2010年设计RESTful API的简单开源规范而开发的。开源工具如Swagger UI，Swagger Editor和Swagger Codegen也被开发用于更好地实现和可视化规范中定义的API。Swagger项目由规范和开源工具组成，非常受欢迎，创建了一个由社区驱动的工具组成的庞大生态系统。<br>2015年，Swagger项目被SmartBear Software收购。Swagger规范被捐赠给Linux基金会并重命名为OpenAPI规范以正式标准化REST API的描述方式。建立OpenAPI倡议是为了以公开和透明的方式指导美洲国家组织的发展。<br>从那以后，Swagger成为最受欢迎的工具套件，可以在API生命周期中充分利用OAS的强大功能。</p></blockquote><hr><h4 id="二、Springboot添加Swagger2依赖"><a href="#二、Springboot添加Swagger2依赖" class="headerlink" title="二、Springboot添加Swagger2依赖"></a>二、Springboot添加Swagger2依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h4 id="三、添加Swagger2配置文件"><a href="#三、添加Swagger2配置文件" class="headerlink" title="三、添加Swagger2配置文件"></a>三、添加Swagger2配置文件</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.PathSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.RequestHandlerSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.Contact;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringFoxConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">apiDocket</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2).select().apis(RequestHandlerSelectors</span><br><span class="line">                .basePackage(<span class="string">"你的controller包，如com.example.controller"</span>)).paths(PathSelectors.any())</span><br><span class="line">                .build().apiInfo(getApiInfo());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">getApiInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfo(</span><br><span class="line">                <span class="string">"TITLE"</span>,</span><br><span class="line">                <span class="string">"DESCIPRION"</span>,</span><br><span class="line">                <span class="string">"VERSION"</span>,</span><br><span class="line">                <span class="string">"TEAMS OF SERVICE URL"</span>,</span><br><span class="line">                <span class="keyword">new</span> Contact(<span class="string">"NAME"</span>,<span class="string">"URL"</span>,<span class="string">"EMAIL"</span>),</span><br><span class="line">                <span class="string">"LICENSE"</span>,</span><br><span class="line">                <span class="string">"LICENSE URL"</span>,</span><br><span class="line">                Collections.emptyList()</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="WebConfig用于访问静态资源"><a href="#WebConfig用于访问静态资源" class="headerlink" title="WebConfig用于访问静态资源"></a>WebConfig用于访问静态资源</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.CacheControl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.EnableWebMvc;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line">nfiguration</span><br><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addResourceHandler(<span class="string">"swagger-ui.html"</span>)</span><br><span class="line">                .addResourceLocations(<span class="string">"classpath:/META-INF/resources/"</span>)</span><br><span class="line">                .setCacheControl(CacheControl.maxAge(<span class="number">1</span>, TimeUnit.HOURS).cachePublic());</span><br><span class="line">        registry.addResourceHandler(<span class="string">"/webjars/**"</span>)</span><br><span class="line">                .addResourceLocations(<span class="string">"classpath:/META-INF/resources/webjars/"</span>)</span><br><span class="line">                .setCacheControl(CacheControl.maxAge(<span class="number">1</span>, TimeUnit.HOURS).cachePublic());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="四、添加注解"><a href="#四、添加注解" class="headerlink" title="四、添加注解"></a>四、添加注解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.MultiValueMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForumController</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * by zhangjia</span></span><br><span class="line"><span class="comment">     * 获取板块分页后页数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"获取板块分页后页数"</span>,notes = <span class="string">"板块页数"</span>)</span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/pnum/&#123;fid&#125;/&#123;isDigest&#125;"</span>, produces = <span class="string">"application/json;charset=UTF-8"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Response <span class="title">pageNum</span><span class="params">(@CookieValue(defaultValue = <span class="string">"0"</span>)</span> <span class="keyword">int</span> uid,</span></span><br><span class="line"><span class="function">                            @<span class="title">CookieValue</span><span class="params">(defaultValue = <span class="string">""</span>)</span> String sid,</span></span><br><span class="line"><span class="function">                            @ApiParam @PathVariable <span class="keyword">int</span> fid,</span></span><br><span class="line"><span class="function">                            @ApiParam @PathVariable <span class="keyword">int</span> isDigest,</span></span><br><span class="line"><span class="function">                            @Autowired HttpServletRequest request) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> forumService.getPageNum(fid, isDigest);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="通过访问：http-localhost-8080-v2-api-docs-，能测试生成的api是否可用。此时返回的是一个json形式的页面，可读性不好。可以通过Swagger-UI来生成一个可读性良好的api页面。"><a href="#通过访问：http-localhost-8080-v2-api-docs-，能测试生成的api是否可用。此时返回的是一个json形式的页面，可读性不好。可以通过Swagger-UI来生成一个可读性良好的api页面。" class="headerlink" title="通过访问：http://localhost:8080/v2/api-docs ，能测试生成的api是否可用。此时返回的是一个json形式的页面，可读性不好。可以通过Swagger UI来生成一个可读性良好的api页面。"></a>通过访问：<a href="http://localhost:8080/v2/api-docs" target="_blank" rel="noopener">http://localhost:8080/v2/api-docs</a> ，能测试生成的api是否可用。此时返回的是一个json形式的页面，可读性不好。可以通过Swagger UI来生成一个可读性良好的api页面。</h5><h5 id="访问：http-localhost-8080-your-app-root-swagger-ui-html-就可以看到可读性较好的api文档页面。"><a href="#访问：http-localhost-8080-your-app-root-swagger-ui-html-就可以看到可读性较好的api文档页面。" class="headerlink" title="访问：http://localhost:8080/your-app-root/swagger-ui.html 就可以看到可读性较好的api文档页面。"></a>访问：<a href="http://localhost:8080/your-app-root/swagger-ui.html" target="_blank" rel="noopener">http://localhost:8080/your-app-root/swagger-ui.html</a> 就可以看到可读性较好的api文档页面。</h5><p><img src="/images/Springboot集成Swagger2/20181114204922957.jpeg" alt="这里写图片描述"></p><hr><h4 id="五、常见注解介绍"><a href="#五、常见注解介绍" class="headerlink" title="五、常见注解介绍"></a>五、常见注解介绍</h4><p>Swagger通过注解表明该接口会生成文档，包括接口名、请求方法、参数、返回信息的等等。</p><blockquote><p>@Api：修饰整个类，描述Controller的作用<br>@ApiOperation：描述一个类的一个方法，或者说一个接口<br>@ApiParam：单个参数描述<br>@ApiModel：用对象来接收参数<br>@ApiProperty：用对象接收参数时，描述对象的一个字段<br>@ApiResponse：HTTP响应其中1个描述<br>@ApiResponses：HTTP响应整体描述<br>@ApiIgnore：使用该注解忽略这个API<br>@ApiError ：发生错误返回的信息<br>@ApiImplicitParam：一个请求参数<br>@ApiImplicitParams：多个请求参数</p></blockquote><hr><p>参考文章：<br><a href="https://blog.csdn.net/fansunion/article/details/51923720" target="_blank" rel="noopener">https://blog.csdn.net/fansunion/article/details/51923720</a><br><a href="https://blog.csdn.net/saytime/article/details/74937664" target="_blank" rel="noopener">https://blog.csdn.net/saytime/article/details/74937664</a><br><a href="https://blog.csdn.net/Phone_1070333541/article/details/80949040" target="_blank" rel="noopener">https://blog.csdn.net/Phone_1070333541/article/details/80949040</a></p>]]></content>
    
    <summary type="html">
    
      Swagger是一个功能强大且易于使用的API开发人员工具套件，适用于团队和个人，支持从整个API生命周期（从设计和文档到测试和部署）的开发。
    
    </summary>
    
      <category term="Springboot" scheme="http://suiwo.xyz/categories/Springboot/"/>
    
    
      <category term="Java" scheme="http://suiwo.xyz/tags/Java/"/>
    
      <category term="Springboot" scheme="http://suiwo.xyz/tags/Springboot/"/>
    
  </entry>
  
  <entry>
    <title>算法与数据结构设计周作业——大整数运算器</title>
    <link href="http://suiwo.xyz/2018/11/13/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%91%A8%E4%BD%9C%E4%B8%9A%E2%80%94%E2%80%94%E5%A4%A7%E6%95%B4%E6%95%B0%E8%BF%90%E7%AE%97%E5%99%A8/"/>
    <id>http://suiwo.xyz/2018/11/13/算法与数据结构设计周作业——大整数运算器/</id>
    <published>2018-11-13T14:36:50.000Z</published>
    <updated>2018-11-16T06:26:51.043Z</updated>
    
    <content type="html"><![CDATA[<h3 id="这次的算法与数据结构设计周作业题目比较简单，一个是求众数与重数，另一个题目则为大整数运算器，由于图形化界面不是硬性要求，所以项目不使用GUI，而是直接在命令行运行，具体题目如下："><a href="#这次的算法与数据结构设计周作业题目比较简单，一个是求众数与重数，另一个题目则为大整数运算器，由于图形化界面不是硬性要求，所以项目不使用GUI，而是直接在命令行运行，具体题目如下：" class="headerlink" title="这次的算法与数据结构设计周作业题目比较简单，一个是求众数与重数，另一个题目则为大整数运算器，由于图形化界面不是硬性要求，所以项目不使用GUI，而是直接在命令行运行，具体题目如下："></a>这次的算法与数据结构设计周作业题目比较简单，一个是求众数与重数，另一个题目则为大整数运算器，由于图形化界面不是硬性要求，所以项目不使用GUI，而是直接在命令行运行，具体题目如下：</h3><hr><ol><li>众数问题<blockquote><p>给定含有n个元素的多重集合S，每个元素在S中出现的次数称为该元素的重数，S中重数最大的元素称为众数。<br>例如，S＝{1, 2 ,2 ,2 ,3 ,5}，S的众数是2，该众数的重数为3。<br>要求对于给定的由n个自然数组成的多重集合S，计算S的众数及其重数。</p></blockquote></li></ol><p>实现该问题并不难，使用Java的HashMap创建键值对，将数字最为key，出现的次数作为value，遍历一次数组即可确定众数以及重数，代码如下。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Unity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="number">1</span>);</span><br><span class="line">        list.add(<span class="number">2</span>);</span><br><span class="line">        list.add(<span class="number">2</span>);</span><br><span class="line">        list.add(<span class="number">2</span>);</span><br><span class="line">        list.add(<span class="number">2</span>);</span><br><span class="line">        list.add(<span class="number">13</span>);</span><br><span class="line">        list.add(<span class="number">1</span>);</span><br><span class="line">        list.add(<span class="number">1</span>);</span><br><span class="line">        Map&lt;String, Integer&gt; map = unity(list);</span><br><span class="line">        System.out.println(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, Integer&gt; <span class="title">unity</span><span class="params">(List&lt;Integer&gt; list)</span> </span>&#123;</span><br><span class="line">        Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> max = list.get(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">int</span> maxNum = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> a : list) &#123;</span><br><span class="line">            <span class="keyword">if</span> (map.containsKey(a)) &#123;</span><br><span class="line">                map.put(a, map.get(a) + <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (maxNum &lt; map.get(a)) &#123;</span><br><span class="line">                    maxNum = map.get(a);</span><br><span class="line">                    max = a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                map.put(a, <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Map&lt;String, Integer&gt; maxMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        maxMap.put(<span class="string">"众数"</span>, max);</span><br><span class="line">        maxMap.put(<span class="string">"重数"</span>, maxNum);</span><br><span class="line">        <span class="keyword">return</span> maxMap;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><ol><li>大整数运算器<blockquote><p>（一）课题内容<br>实现一个简单的大整数算术运算程序。主要功能计算两个大整数（20位）的加减法等算术运算，按指定的格式输出结果。通过此课题，熟练掌握字符串、格式输出、文件的各种操作，以及基本的计算算法思想的应用。<br>（二）课题要求</p><ol><li>基本要求<br>(1) 输入功能：能实现从键盘或文本文件输入代表大整数的字符串并用合适的结构存储，能实现输入整个表达式（含大整数和相应的运算符）。<br>(2) 输出功能：将算式及计算结果按照一定格式批量输出到屏幕及另一个文本文件中。<br>(3) 判断功能：能够对输入的表达式判断其正确与否，如果表达式不正确则无法进行运算；表达式正确的情况下执行运算功能。<br>(4) 运算功能：可以实现大整数的加法、减法、乘法和除法运算。 </li><li>扩展要求<br>(1) 实现一些常用的数学函数对大整数进行运算，如：大整数的平方根运算sqrt(x)、大整数的幂运算pow(x,y)等。<br>【其他要求】<br>（1）变量、函数命名符合规范。<br>（2）注释详细：每个变量都要求有注释说明用途；函数有注释说明功能，对参数、返回值也要以注释的形式说明用途；关键的语句段要求有注释解释。<br>（3）程序的层次清晰，可读性强。<br>（4）界面美观，交互方便。</li></ol></blockquote></li></ol><p>实现该问题的难度主要是在除法，加减乘皆可将大整数转化为字符串，然后进行相应的运算，除法我是用的是之前在LeetCode刷题时遇到的一个题目，<code>20.两数相除</code>这个题目的启发，<a href="http://suiwo.xyz/2018/10/23/LeetCode%EF%BC%9A29-%E4%B8%A4%E6%95%B0%E7%9B%B8%E9%99%A4%EF%BC%88Java%EF%BC%89/">点击传送门</a> 可以看看我之前总结的在不使用除法以及取余的情况下如何进行除法运算。关于扩展要求我目前还未添加，添加之后我会重新修改这篇博文的！，实现的代码格式。(代码比较长，可以点击<a href="https://github.com/ZhangJia97/calculationTas" target="_blank" rel="noopener">传送门</a>进GitHub直接下载整个作业源码)<br>运行界面比较简单，示例如下：</p><blockquote><p>手动输入<br><img src="/images/算法与数据结构设计周作业——大整数运算器/20181031142500647.png" alt="在这里插入图片描述"></p></blockquote><blockquote><p>从文件中读取<br><img src="/images/算法与数据结构设计周作业——大整数运算器/20181031142547134.png" alt="在这里插入图片描述"><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BigNum</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">            System.out.println(<span class="string">"--------------------\n请选择方式:"</span>);</span><br><span class="line">            System.out.println(<span class="string">"1.手动输入\n2.从文件读取\n0.退出系统\n--------------------"</span>);</span><br><span class="line">            String choice = sc.nextLine();</span><br><span class="line">            <span class="keyword">switch</span> (choice) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"1"</span>:</span><br><span class="line">                    arithmetic();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"2"</span>:</span><br><span class="line">                    arithmeticByFile();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"0"</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    System.out.println(<span class="string">"非法输入，请重试！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (choice.equals(<span class="string">"0"</span>)) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 手动输入</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">arithmetic</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"\n\n--------------------\n请选择要执行的运算："</span>);</span><br><span class="line">            System.out.println(<span class="string">"1.加法"</span>);</span><br><span class="line">            System.out.println(<span class="string">"2.减法"</span>);</span><br><span class="line">            System.out.println(<span class="string">"3.乘法"</span>);</span><br><span class="line">            System.out.println(<span class="string">"4.除法"</span>);</span><br><span class="line">            System.out.println(<span class="string">"0.退出\n--------------------"</span>);</span><br><span class="line">            Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">            String choice = sc.nextLine();</span><br><span class="line">            <span class="keyword">switch</span> (choice) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"1"</span>:</span><br><span class="line">                    Scanner sc1 = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">                    System.out.print(<span class="string">"\n\n请输入被加数："</span>);</span><br><span class="line">                    String a1 = sc1.nextLine();</span><br><span class="line">                    System.out.print(<span class="string">"请输入加数："</span>);</span><br><span class="line">                    String b1 = sc1.nextLine();</span><br><span class="line">                    <span class="keyword">if</span> (checkNum(a1) &amp;&amp; checkNum(b1)) &#123;</span><br><span class="line">                        String num1 = add(a1, b1);</span><br><span class="line">                        System.out.println(mergeStr(a1, b1, choice, num1));</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        System.out.println(<span class="string">"数字格式有误，请检查"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"2"</span>:</span><br><span class="line">                    Scanner sc2 = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">                    System.out.print(<span class="string">"\n\n请输入被减数："</span>);</span><br><span class="line">                    String a2 = sc2.nextLine();</span><br><span class="line">                    System.out.print(<span class="string">"请输入减数："</span>);</span><br><span class="line">                    String b2 = sc2.nextLine();</span><br><span class="line">                    <span class="keyword">if</span> (checkNum(a2) &amp;&amp; checkNum(b2)) &#123;</span><br><span class="line">                        String num2 = subtract(a2, b2);</span><br><span class="line">                        System.out.println(mergeStr(a2, b2, choice, num2));</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        System.out.println(<span class="string">"数字格式有误，请检查"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"3"</span>:</span><br><span class="line">                    Scanner sc3 = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">                    System.out.print(<span class="string">"\n\n请输入被乘数："</span>);</span><br><span class="line">                    String a3 = sc3.nextLine();</span><br><span class="line">                    System.out.print(<span class="string">"请输入乘数："</span>);</span><br><span class="line">                    String b3 = sc3.nextLine();</span><br><span class="line">                    <span class="keyword">if</span> (checkNum(a3) &amp;&amp; checkNum(b3)) &#123;</span><br><span class="line">                        String num3 = mul(a3, b3);</span><br><span class="line">                        System.out.println(mergeStr(a3, b3, choice, num3));</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        System.out.println(<span class="string">"数字格式有误，请检查"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"4"</span>:</span><br><span class="line">                    Scanner sc4 = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">                    System.out.print(<span class="string">"\n\n请输入被除数："</span>);</span><br><span class="line">                    String a4 = sc4.nextLine();</span><br><span class="line">                    System.out.print(<span class="string">"请输入除数："</span>);</span><br><span class="line">                    String b4 = sc4.nextLine();</span><br><span class="line">                    <span class="keyword">if</span> (checkNum(a4) &amp;&amp; checkNum(b4)) &#123;</span><br><span class="line">                        String num4 = division(a4, b4);</span><br><span class="line">                        System.out.println(mergeStr(a4, b4, choice, num4));</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        System.out.println(<span class="string">"数字格式有误，请检查"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"0"</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    System.out.println(<span class="string">"非法输入，请重试！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (choice.equals(<span class="string">"0"</span>)) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 以文件的形式来计算</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">arithmeticByFile</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String str = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            str = readFile();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;String&gt; list = checkFileStr(str);</span><br><span class="line">        <span class="keyword">if</span> (list.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"字符串匹配时有误，请检查"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            String num = <span class="string">""</span>;</span><br><span class="line">            String num1 = list.get(<span class="number">0</span>);</span><br><span class="line">            String sign = list.get(<span class="number">1</span>);</span><br><span class="line">            String num2 = list.get(<span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span> (!checkNum(num1) || !checkNum(num2)) &#123;</span><br><span class="line">                System.out.println(<span class="string">"数字格式有误，请检查"</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">switch</span> (sign) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"+"</span>:</span><br><span class="line">                    num = add(num1, num2);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"-"</span>:</span><br><span class="line">                    num = subtract(num1, num2);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"*"</span>:</span><br><span class="line">                    num = mul(num1, num2);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"/"</span>:</span><br><span class="line">                    num = division(num1, num2);</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    System.out.println(<span class="string">"运算符有误，请检查"</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                writeFile(str + <span class="string">" = "</span> + num);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 检查文件中字符串是否合法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str 需要检查的字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 是否合法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">checkFileStr</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        String pattern = <span class="string">"\\((-?[\\d+])\\)(\\W)\\((-?[\\d+])\\)"</span>;</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建 Pattern 对象</span></span><br><span class="line">        Pattern r = Pattern.compile(pattern);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 现在创建 matcher 对象</span></span><br><span class="line">        Matcher m = r.matcher(str);</span><br><span class="line">        <span class="keyword">if</span> (m.find()) &#123;</span><br><span class="line">            list.add(m.group(<span class="number">1</span>));</span><br><span class="line">            list.add(m.group(<span class="number">2</span>));</span><br><span class="line">            list.add(m.group(<span class="number">3</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 检查输入的数字是否合法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str 需要检查的字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 是否合法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">checkNum</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        String pattern = <span class="string">"^-?\\d+$"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建 Pattern 对象</span></span><br><span class="line">        Pattern r = Pattern.compile(pattern);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 现在创建 matcher 对象</span></span><br><span class="line">        Matcher m = r.matcher(str);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> m.find() &amp;&amp; m.group(<span class="number">0</span>).equals(str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 读文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 若文件不存在则返回空，正常则返回文件中字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">readFile</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">"file/arithmetic.txt"</span>);</span><br><span class="line">        <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">            FileInputStream fileInputStream = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">            InputStreamReader inputStreamReader = <span class="keyword">new</span> InputStreamReader(fileInputStream, <span class="string">"UTF-8"</span>);</span><br><span class="line">            BufferedReader bufferedReader = <span class="keyword">new</span> BufferedReader(inputStreamReader);</span><br><span class="line">            String line = bufferedReader.readLine();</span><br><span class="line">            bufferedReader.close();</span><br><span class="line">            inputStreamReader.close();</span><br><span class="line">            fileInputStream.close();</span><br><span class="line">            System.out.println(<span class="string">"\n\n获取到的算式为: "</span> + line);</span><br><span class="line">            <span class="keyword">return</span> line;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 写文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> result 计算结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeFile</span><span class="params">(String result)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">"file/result.txt"</span>);</span><br><span class="line">        <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">            FileOutputStream fileOutputStream = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">            OutputStreamWriter outputStreamWriter = <span class="keyword">new</span> OutputStreamWriter(fileOutputStream, <span class="string">"UTF-8"</span>);</span><br><span class="line">            BufferedWriter bufferedWriter = <span class="keyword">new</span> BufferedWriter(outputStreamWriter);</span><br><span class="line">            bufferedWriter.write(result);</span><br><span class="line">            bufferedWriter.close();</span><br><span class="line">            outputStreamWriter.close();</span><br><span class="line">            fileOutputStream.close();</span><br><span class="line">            System.out.println(<span class="string">"计算结果为: "</span> + result + <span class="string">"\n\n"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"文件不存在"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 合并字符串</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num1 数1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num2 数2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sign 运算符</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num  结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 合并后的字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">mergeStr</span><span class="params">(String num1, String num2, String sign, String num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (sign) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"1"</span>:</span><br><span class="line">                sign = <span class="string">"+"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"2"</span>:</span><br><span class="line">                sign = <span class="string">"-"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"3"</span>:</span><br><span class="line">                sign = <span class="string">"*"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"4"</span>:</span><br><span class="line">                sign = <span class="string">"/"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"\n答案为:"</span> + num1 + <span class="string">" "</span> + sign + <span class="string">" "</span> + num2 + <span class="string">" = "</span> + num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 大整数的加法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a 被加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> b 加数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 和</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">add</span><span class="params">(String a, String b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> plus = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (a.charAt(<span class="number">0</span>) == <span class="string">'-'</span> &amp;&amp; b.charAt(<span class="number">0</span>) != <span class="string">'-'</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> subtract(b, a.replace(<span class="string">"-"</span>, <span class="string">""</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a.charAt(<span class="number">0</span>) != <span class="string">'-'</span> &amp;&amp; b.charAt(<span class="number">0</span>) == <span class="string">'-'</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> subtract(a, b.replace(<span class="string">"-"</span>, <span class="string">""</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a.charAt(<span class="number">0</span>) == <span class="string">'-'</span> &amp;&amp; b.charAt(<span class="number">0</span>) == <span class="string">'-'</span>) &#123;</span><br><span class="line">            plus = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a = a.replace(<span class="string">"-"</span>, <span class="string">""</span>);</span><br><span class="line">        b = b.replace(<span class="string">"-"</span>, <span class="string">""</span>);</span><br><span class="line">        <span class="keyword">if</span> (a.length() &lt; b.length()) &#123;</span><br><span class="line">            String tmp = a;</span><br><span class="line">            a = b;</span><br><span class="line">            b = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">char</span>[] aList = a.toCharArray();</span><br><span class="line">        <span class="keyword">char</span>[] bList = b.toCharArray();</span><br><span class="line">        <span class="keyword">int</span> aLen = aList.length;</span><br><span class="line">        <span class="keyword">int</span> bLen = bList.length;</span><br><span class="line">        StringBuilder num = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//是否进位</span></span><br><span class="line">        <span class="keyword">boolean</span> carry = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">while</span> (aLen &gt; <span class="number">0</span> &amp;&amp; bLen &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> addNum = Integer.parseInt(String.valueOf(aList[aLen - <span class="number">1</span>])) + Integer.parseInt(String.valueOf(bList[bLen - <span class="number">1</span>]));</span><br><span class="line">            <span class="keyword">if</span> (carry) &#123;</span><br><span class="line">                addNum += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (addNum &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">                addNum %= <span class="number">10</span>;</span><br><span class="line">                carry = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                carry = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            num.insert(<span class="number">0</span>, String.valueOf(addNum));</span><br><span class="line">            aLen--;</span><br><span class="line">            bLen--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (aLen &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> addNum = Integer.parseInt(String.valueOf(aList[aLen - <span class="number">1</span>]));</span><br><span class="line">            <span class="keyword">if</span> (carry) &#123;</span><br><span class="line">                addNum += <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (addNum &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">                    addNum %= <span class="number">10</span>;</span><br><span class="line">                    carry = <span class="keyword">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    carry = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            num.insert(<span class="number">0</span>, addNum);</span><br><span class="line">            aLen--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (carry) &#123;</span><br><span class="line">            num.insert(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!plus) &#123;</span><br><span class="line">            num.insert(<span class="number">0</span>, <span class="string">"-"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 大整数减法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a 被减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> b 减数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 差</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">subtract</span><span class="params">(String a, String b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> isPlus = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (a.charAt(<span class="number">0</span>) != <span class="string">'-'</span> &amp;&amp; b.charAt(<span class="number">0</span>) == <span class="string">'-'</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> add(a, b.replace(<span class="string">"-"</span>, <span class="string">""</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a.charAt(<span class="number">0</span>) == <span class="string">'-'</span> &amp;&amp; b.charAt(<span class="number">0</span>) != <span class="string">'-'</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> add(a, b.replace(<span class="string">"-"</span>, <span class="string">""</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a.charAt(<span class="number">0</span>) == <span class="string">'-'</span> &amp;&amp; b.charAt(<span class="number">0</span>) == <span class="string">'-'</span>) &#123;</span><br><span class="line">            String tmp = a.replace(<span class="string">"-"</span>, <span class="string">""</span>);</span><br><span class="line">            a = b.replace(<span class="string">"-"</span>, <span class="string">""</span>);</span><br><span class="line">            b = tmp;</span><br><span class="line">            isPlus = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a = a.replace(<span class="string">"-"</span>, <span class="string">""</span>);</span><br><span class="line">        b = b.replace(<span class="string">"-"</span>, <span class="string">""</span>);</span><br><span class="line">        <span class="keyword">if</span> (a.length() &lt; b.length()) &#123;</span><br><span class="line">            String tmp = a;</span><br><span class="line">            a = b;</span><br><span class="line">            b = tmp;</span><br><span class="line">            isPlus = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">char</span>[] aList = a.toCharArray();</span><br><span class="line">        <span class="keyword">char</span>[] bList = b.toCharArray();</span><br><span class="line">        <span class="keyword">int</span> aLen = aList.length;</span><br><span class="line">        <span class="keyword">int</span> bLen = bList.length;</span><br><span class="line">        <span class="keyword">if</span> (aLen == bLen) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = aLen; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">                <span class="keyword">if</span> (Integer.parseInt(String.valueOf(aList[i - <span class="number">1</span>])) &lt; Integer.parseInt(String.valueOf(bList[i - <span class="number">1</span>]))) &#123;</span><br><span class="line">                    isPlus = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">char</span>[] tmpList = aList;</span><br><span class="line">                    aList = bList;</span><br><span class="line">                    bList = tmpList;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuilder num = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//是否借位</span></span><br><span class="line">        <span class="keyword">boolean</span> borrow = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">while</span> (aLen &gt; <span class="number">0</span> &amp;&amp; bLen &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> subtractNum;</span><br><span class="line">            <span class="keyword">int</span> m = Integer.parseInt(String.valueOf(aList[aLen - <span class="number">1</span>]));</span><br><span class="line">            <span class="keyword">int</span> n = Integer.parseInt(String.valueOf(bList[bLen - <span class="number">1</span>]));</span><br><span class="line">            <span class="keyword">if</span> (borrow) &#123;</span><br><span class="line">                <span class="keyword">if</span> (m - <span class="number">1</span> &lt; n) &#123;</span><br><span class="line">                    subtractNum = m - <span class="number">1</span> + <span class="number">10</span> - n;</span><br><span class="line">                    borrow = <span class="keyword">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    subtractNum = m - <span class="number">1</span> - n;</span><br><span class="line">                    borrow = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (m &lt; n) &#123;</span><br><span class="line">                    subtractNum = m + <span class="number">10</span> - n;</span><br><span class="line">                    borrow = <span class="keyword">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    subtractNum = m - n;</span><br><span class="line">                    borrow = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            num.insert(<span class="number">0</span>, String.valueOf(subtractNum));</span><br><span class="line">            aLen--;</span><br><span class="line">            bLen--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (aLen &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> subtractNum = Integer.parseInt(String.valueOf(aList[aLen - <span class="number">1</span>]));</span><br><span class="line">            <span class="keyword">if</span> (borrow) &#123;</span><br><span class="line">                subtractNum -= <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (subtractNum &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                    subtractNum = -subtractNum;</span><br><span class="line">                    borrow = <span class="keyword">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    borrow = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            num.insert(<span class="number">0</span>, subtractNum);</span><br><span class="line">            aLen--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!isPlus) &#123;</span><br><span class="line">            num.insert(<span class="number">0</span>, <span class="string">"-"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> String.valueOf(Integer.parseInt(num.toString()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 大整数乘法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a 被乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> b 乘数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 积</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">mul</span><span class="params">(String a, String b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> isPlus = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (a.charAt(<span class="number">0</span>) == <span class="string">'-'</span> &amp;&amp; b.charAt(<span class="number">0</span>) != <span class="string">'-'</span>) &#123;</span><br><span class="line">            isPlus = <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a.charAt(<span class="number">0</span>) != <span class="string">'-'</span> &amp;&amp; b.charAt(<span class="number">0</span>) == <span class="string">'-'</span>) &#123;</span><br><span class="line">            isPlus = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Integer.parseInt(a) == <span class="number">0</span> || Integer.parseInt(b) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"0"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        a = a.replace(<span class="string">"-"</span>, <span class="string">""</span>);</span><br><span class="line">        b = b.replace(<span class="string">"-"</span>, <span class="string">""</span>);</span><br><span class="line">        <span class="keyword">if</span> (a.length() &lt; b.length()) &#123;</span><br><span class="line">            String tmp = a;</span><br><span class="line">            a = b;</span><br><span class="line">            b = tmp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span>[] aList = a.toCharArray();</span><br><span class="line">        <span class="keyword">char</span>[] bList = b.toCharArray();</span><br><span class="line">        <span class="keyword">int</span> bLen = bList.length;</span><br><span class="line">        String num = <span class="string">"0"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (bLen &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> aLen = aList.length;</span><br><span class="line">            StringBuilder mulNum = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (aLen &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> sigleMulNum = Integer.parseInt(String.valueOf(bList[bLen - <span class="number">1</span>])) * Integer.parseInt(String.valueOf(aList[aLen - <span class="number">1</span>])) + carry;</span><br><span class="line">                carry = sigleMulNum / <span class="number">10</span>;</span><br><span class="line">                sigleMulNum %= <span class="number">10</span>;</span><br><span class="line">                mulNum.insert(<span class="number">0</span>, sigleMulNum);</span><br><span class="line">                aLen--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (carry != <span class="number">0</span>) &#123;</span><br><span class="line">                mulNum.insert(<span class="number">0</span>, carry);</span><br><span class="line">            &#125;</span><br><span class="line">            num = String.valueOf(Integer.parseInt(num) + Integer.parseInt(mulNum.toString()) * Integer.parseInt(String.valueOf((<span class="keyword">int</span>) Math.pow(<span class="number">10</span>, bList.length - bLen))));</span><br><span class="line">            bLen--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!isPlus) &#123;</span><br><span class="line">            num = <span class="string">"-"</span> + num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 大整数除法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a 被除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> b 除数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 商，只保留整数位</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">division</span><span class="params">(String a, String b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> isPlus = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">int</span> aSign = a.charAt(<span class="number">0</span>) == <span class="string">'-'</span> ? -<span class="number">1</span> : <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> bSign = b.charAt(<span class="number">0</span>) == <span class="string">'-'</span> ? -<span class="number">1</span> : <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (aSign * bSign &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            isPlus = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a = a.replace(<span class="string">"-"</span>, <span class="string">""</span>);</span><br><span class="line">        b = b.replace(<span class="string">"-"</span>, <span class="string">""</span>);</span><br><span class="line">        <span class="keyword">if</span> (subtract(a, b).charAt(<span class="number">0</span>) == <span class="string">'-'</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"0"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String num = <span class="string">"0"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (subtract(a, b).charAt(<span class="number">0</span>) != <span class="string">'-'</span>) &#123;</span><br><span class="line">            String numTimes = <span class="string">"1"</span>;</span><br><span class="line">            String m = b;</span><br><span class="line">            <span class="keyword">while</span> (subtract(a, mul(m, <span class="string">"2"</span>)).charAt(<span class="number">0</span>) != <span class="string">'-'</span>) &#123;</span><br><span class="line">                numTimes = mul(numTimes, <span class="string">"2"</span>);</span><br><span class="line">                m = mul(m, <span class="string">"2"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            num = add(num, numTimes);</span><br><span class="line">            a = subtract(a, m);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!isPlus) &#123;</span><br><span class="line">            num = <span class="string">"-"</span> + num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    <summary type="html">
    
      这次的算法与数据结构设计周作业题目比较简单，一个是求众数与重数，另一个题目则为大整数运算器，由于图形化界面不是硬性要求，所以项目不使用GUI，而是直接在命令行运行。
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://suiwo.xyz/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构与算法" scheme="http://suiwo.xyz/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
      <category term="Java" scheme="http://suiwo.xyz/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode：29. 两数相除（Java）</title>
    <link href="http://suiwo.xyz/2018/10/23/LeetCode%EF%BC%9A29-%E4%B8%A4%E6%95%B0%E7%9B%B8%E9%99%A4%EF%BC%88Java%EF%BC%89/"/>
    <id>http://suiwo.xyz/2018/10/23/LeetCode：29-两数相除（Java）/</id>
    <published>2018-10-23T12:34:05.000Z</published>
    <updated>2018-11-15T02:08:16.811Z</updated>
    
    <content type="html"><![CDATA[<h2 id="29-两数相除（Java）"><a href="#29-两数相除（Java）" class="headerlink" title="29. 两数相除（Java）"></a>29. 两数相除（Java）</h2><hr><h5 id="参考文章：https-blog-csdn-net-qq-31442743-article-details-81181554"><a href="#参考文章：https-blog-csdn-net-qq-31442743-article-details-81181554" class="headerlink" title="参考文章：https://blog.csdn.net/qq_31442743/article/details/81181554"></a>参考文章：<a href="https://blog.csdn.net/qq_31442743/article/details/81181554" target="_blank" rel="noopener">https://blog.csdn.net/qq_31442743/article/details/81181554</a></h5><h5 id="给定两个整数，被除数-dividend和除数-divisor。将两数相除，要求不使用乘法、除法和-mod-运算符。返回被除数-dividend除以除数-divisor得到的商。"><a href="#给定两个整数，被除数-dividend和除数-divisor。将两数相除，要求不使用乘法、除法和-mod-运算符。返回被除数-dividend除以除数-divisor得到的商。" class="headerlink" title="给定两个整数，被除数 dividend和除数 divisor。将两数相除，要求不使用乘法、除法和 mod 运算符。返回被除数 dividend除以除数 divisor得到的商。"></a>给定两个整数，被除数 <code>dividend</code>和除数 <code>divisor</code>。将两数相除，要求不使用乘法、除法和 mod 运算符。返回被除数 <code>dividend</code>除以除数 <code>divisor</code>得到的商。</h5><p>示例 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: dividend = 10, divisor = 3</span><br><span class="line">输出: 3</span><br></pre></td></tr></table></figure></p><p>示例 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: dividend = 7, divisor = -3</span><br><span class="line">输出: -2</span><br></pre></td></tr></table></figure></p><p>说明:</p><ul><li>被除数和除数均为 32 位有符号整数。    </li><li>除数不为 0。</li><li>假设我们的环境只能存储 32 位有符号整数，其数值范围是 [−231,  231 − 1]。本题中，如果除法结果溢出，则返回 231 − 1。</li></ul><hr><p>二进制相关的形式来实现。”&lt;&lt;”和”&gt;&gt;”分别为将数的整体左移和右移，例如a&lt;&lt;1表示将a向左移动一位，即变为原来的二倍。</p><p>思路:当被除数大于等于除数时(否则的话就为0了)，我们设置两个变量t和p，并分别初始化为除数和1(最小的情况)，当被除数大于等于t的二倍时，将t和p同时扩大二倍(左移)，并将返回值加上p，除数减去t。和二进制类似，例如29除以8，8扩大二倍，16小于29，再扩大二倍，超过29，于是29减去之前的16，返回值加上2。第二次循环时因为此时的13小于8的二倍，故加上1，整个循环结束，最终结果为2+1=3，很明显符合。此外注意判断结果正负号的正负号时亦或的作用。 代码如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">divide</span><span class="params">(<span class="keyword">int</span> dividend, <span class="keyword">int</span> divisor)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(divisor == <span class="number">0</span> || (dividend == Integer.MIN_VALUE &amp;&amp; divisor == -<span class="number">1</span>))&#123;<span class="comment">//考虑特殊情况</span></span><br><span class="line">            <span class="keyword">return</span> Integer.MAX_VALUE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> sign = ((dividend &lt; <span class="number">0</span>) ^ (divisor &lt; <span class="number">0</span>)) ? -<span class="number">1</span> : <span class="number">1</span>;<span class="comment">//异或运算</span></span><br><span class="line">        <span class="keyword">long</span> ms = (<span class="keyword">long</span>)dividend;</span><br><span class="line">        <span class="keyword">long</span> ns = (<span class="keyword">long</span>)divisor;</span><br><span class="line">        ms = Math.abs(ms);</span><br><span class="line">        ns = Math.abs(ns);</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(ms &gt;= ns)&#123;</span><br><span class="line">            <span class="keyword">long</span> m = ns;</span><br><span class="line">            <span class="keyword">long</span> n = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(ms &gt;= (m &lt;&lt; <span class="number">1</span>))&#123;</span><br><span class="line">                m &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">                n &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            num += n;</span><br><span class="line">            ms -= m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num * sign;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      给定两个整数，被除数 dividend 和除数 divisor 。将两数相除，要求不使用乘法、除法和 mod 运算符。返回被除数 dividend 除以除数 divisor 得到的商。
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://suiwo.xyz/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构与算法" scheme="http://suiwo.xyz/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://suiwo.xyz/tags/LeetCode/"/>
    
      <category term="Java" scheme="http://suiwo.xyz/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Springboot集成WebSocket功能</title>
    <link href="http://suiwo.xyz/2018/10/13/Springboot%E9%9B%86%E6%88%90WebSocket%E5%8A%9F%E8%83%BD/"/>
    <id>http://suiwo.xyz/2018/10/13/Springboot集成WebSocket功能/</id>
    <published>2018-10-13T11:02:30.000Z</published>
    <updated>2018-11-16T14:09:30.761Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Springboot集成WebSocket功能"><a href="#Springboot集成WebSocket功能" class="headerlink" title="Springboot集成WebSocket功能"></a>Springboot集成WebSocket功能</h2><hr><p> 由于MT管理器论坛需要添加聊天功能，在网上搜了很多，最后发现了websocket可以用于实时通信和聊天室功能，然后看了慕课上的一个网课，跟着他做出来了一个demo，下面就来看一下什么是websocket吧</p><hr><p>在<a href="http://www.runoob.com/html/html5-websocket.html" target="_blank" rel="noopener">菜鸟教程</a>中的解释是这样的</p><blockquote><p>WebSocket 是 HTML5 开始提供的一种在单个 TCP 连接上进行全双工通讯的协议。<br>WebSocket 使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。在 WebSocket API 中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接，并进行双向数据传输。<br>在 WebSocket API 中，浏览器和服务器只需要做一个握手的动作，然后，浏览器和服务器之间就形成了一条快速通道。两者之间就直接可以数据互相传送。<br>现在，很多网站为了实现推送技术，所用的技术都是 Ajax 轮询。轮询是在特定的的时间间隔（如每1秒），由浏览器对服务器发出HTTP请求，然后由服务器返回最新的数据给客户端的浏览器。这种传统的模式带来很明显的缺点，即浏览器需要不断的向服务器发出请求，然而HTTP请求可能包含较长的头部，其中真正有效的数据可能只是很小的一部分，显然这样会浪费很多的带宽等资源。<br>HTML5 定义的 WebSocket 协议，能更好的节省服务器资源和带宽，并且能够更实时地进行通讯。<br>浏览器通过 JavaScript 向服务器发出建立 WebSocket 连接的请求，连接建立以后，客户端和服务器端就可以通过 TCP 连接直接交换数据。<br>当你获取 Web Socket 连接后，你可以通过 send() 方法来向服务器发送数据，并通过 onmessage 事件来接收服务器返回的数据。<br>以下 API 用于创建 WebSocket 对象。</p></blockquote><p>简单来说就是一个可以不用使用轮训就可以实现后端主动向前端发送消息的一个协议。现在我们来看一下如何在springboot中实现这个</p><hr><h4 id="1-添加依赖"><a href="#1-添加依赖" class="headerlink" title="1.添加依赖"></a>1.添加依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-websocket<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.webjars<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>webjars-locator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.webjars<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sockjs-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.webjars<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>stomp-websocket<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h4 id="2-写配置文件"><a href="#2-写配置文件" class="headerlink" title="2.写配置文件"></a>2.写配置文件</h4><p><code>WebSocketConfig.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.suiwo.websocketdemo.Config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.messaging.simp.config.MessageBrokerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.socket.config.annotation.EnableWebSocketMessageBroker;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.socket.config.annotation.StompEndpointRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSocketMessageBroker</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSocketConfig</span> <span class="keyword">implements</span> <span class="title">WebSocketMessageBrokerConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册端点，发布或者订阅消息的时候需要连接此端点</span></span><br><span class="line"><span class="comment">     * setAllowedOrigins 非必须，*表示允许其他域进行连接</span></span><br><span class="line"><span class="comment">     * withSockJS  表示开始sockejs支持</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerStompEndpoints</span><span class="params">(StompEndpointRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addEndpoint(<span class="string">"/endpoint-websocket"</span>).setAllowedOrigins(<span class="string">"*"</span>).withSockJS();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置消息代理(中介)</span></span><br><span class="line"><span class="comment">     * enableSimpleBroker 服务端推送给客户端的路径前缀</span></span><br><span class="line"><span class="comment">     * setApplicationDestinationPrefixes  客户端发送数据给服务器端的一个前缀</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configureMessageBroker</span><span class="params">(MessageBrokerRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.enableSimpleBroker(<span class="string">"/getMessage"</span>);</span><br><span class="line">        registry.setApplicationDestinationPrefixes(<span class="string">"/sendMessage"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="3-消息的实体类"><a href="#3-消息的实体类" class="headerlink" title="3.消息的实体类"></a>3.消息的实体类</h4><p>这是我们需要新建一个model用来表示发送的消息类<br><code>Message.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.suiwo.websocketdemo.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Message</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String fromUser;</span><br><span class="line">    <span class="keyword">private</span> String toUser;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFromUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fromUser;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFromUser</span><span class="params">(String fromUser)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fromUser = fromUser;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getToUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> toUser;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setToUser</span><span class="params">(String toUser)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.toUser = toUser;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMessage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMessage</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Message&#123;"</span> +</span><br><span class="line">                <span class="string">"fromUser='"</span> + fromUser + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", toUser='"</span> + toUser + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", message='"</span> + message + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>4.controller方法<br>我们一共需要书写两个controller一个是用来将消息主动推送给前端（被发送方的），还有一个是将消息以treemap的方式发送给前端让前端（当前用户的）展示。<br><code>ChatController.java</code>(用于将消息直接展示给前端显示)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.suiwo.websocketdemo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.TreeMap;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChatController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/chatMessage"</span>, method = RequestMethod.POST)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeMap&lt;String, String&gt; <span class="title">add</span><span class="params">(@Autowired HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        TreeMap&lt;String, String&gt; treeMap = <span class="keyword">new</span> TreeMap&lt;String, String&gt;();</span><br><span class="line">        treeMap.put(<span class="string">"toUser"</span>, request.getParameter(<span class="string">"toUser"</span>));</span><br><span class="line">        treeMap.put(<span class="string">"fromUser"</span>, request.getParameter(<span class="string">"fromUser"</span>));</span><br><span class="line">        treeMap.put(<span class="string">"message"</span>, request.getParameter(<span class="string">"message"</span>));</span><br><span class="line">        <span class="keyword">return</span> treeMap;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>WebSocketController.java</code>（用于将消息主动推送给被发送方）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.suiwo.websocketdemo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.messaging.handler.annotation.MessageMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> xyz.suiwo.websocketdemo.Service.WebSocketService;</span><br><span class="line"><span class="keyword">import</span> xyz.suiwo.websocketdemo.model.Message;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSocketController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> WebSocketService webSocketService;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WebSocketController</span><span class="params">(WebSocketService webSocketService)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.webSocketService = webSocketService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@MessageMapping</span>(value = <span class="string">"/single/chat"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(Message message)</span></span>&#123;</span><br><span class="line">        webSocketService.sendMessageTo(message.getFromUser(), message.getToUser(), message.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-前端展示"><a href="#4-前端展示" class="headerlink" title="4.前端展示"></a>4.前端展示</h4><p>前端的接收我们需要用的socket.js，具体使用方式。。。我也没有仔细看，只是直接把网站提供的前端源码copy过来了，需要的同学可以参考一下<br><code>app.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> stompClient = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setConnected</span>(<span class="params">connected</span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"#connect"</span>).prop(<span class="string">"disabled"</span>, connected);</span><br><span class="line">    $(<span class="string">"#disconnect"</span>).prop(<span class="string">"disabled"</span>, !connected);</span><br><span class="line">    <span class="keyword">if</span> (connected) &#123;</span><br><span class="line">        $(<span class="string">"#conversation"</span>).show();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">"#conversation"</span>).hide();</span><br><span class="line">    &#125;</span><br><span class="line">    $(<span class="string">"#notice"</span>).html(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="keyword">from</span> = $(<span class="string">"#from"</span>).val();</span><br><span class="line">    <span class="keyword">var</span> to = $(<span class="string">"#to"</span>).val();</span><br><span class="line">    <span class="keyword">var</span> socket = <span class="keyword">new</span> SockJS(<span class="string">'/endpoint-websocket'</span>);</span><br><span class="line">    stompClient = Stomp.over(socket);</span><br><span class="line">    stompClient.connect(&#123;&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">frame</span>) </span>&#123;</span><br><span class="line">        setConnected(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'Connected: '</span> + frame);</span><br><span class="line">        stompClient.subscribe(<span class="string">'/getMessage/single/'</span> + <span class="keyword">from</span> + to, <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">            showContent(result.body);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">disconnect</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (stompClient !== <span class="literal">null</span>) &#123;</span><br><span class="line">        stompClient.disconnect();</span><br><span class="line">    &#125;</span><br><span class="line">    setConnected(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Disconnected"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendName</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> toUser = <span class="built_in">document</span>.getElementById(<span class="string">"to"</span>).value;</span><br><span class="line">    <span class="keyword">var</span> fromUser = <span class="built_in">document</span>.getElementById(<span class="string">"from"</span>).value;</span><br><span class="line">    <span class="keyword">var</span> message = <span class="built_in">document</span>.getElementById(<span class="string">"content"</span>).value;</span><br><span class="line">    stompClient.send(<span class="string">"/sendMessage/single/chat"</span>, &#123;&#125;, <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">        <span class="string">'message'</span>: $(<span class="string">"#content"</span>).val(),</span><br><span class="line">        <span class="string">'toUser'</span>: $(<span class="string">"#to"</span>).val(),</span><br><span class="line">        <span class="string">'fromUser'</span>: $(<span class="string">"#from"</span>).val()</span><br><span class="line">    &#125;));</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) &#123;</span><br><span class="line">        <span class="comment">// IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码</span></span><br><span class="line">        xmlhttp = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// IE6, IE5 浏览器执行代码</span></span><br><span class="line">        xmlhttp = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    xmlhttp.open(<span class="string">"POST"</span>, <span class="string">"/chatMessage"</span>, <span class="literal">false</span>);</span><br><span class="line">    xmlhttp.setRequestHeader(<span class="string">'content-type'</span>, <span class="string">'application/x-www-form-urlencoded'</span>);</span><br><span class="line">    <span class="comment">//正式发送请求</span></span><br><span class="line">    xmlhttp.send(<span class="string">'toUser='</span> + toUser + <span class="string">'&amp;fromUser='</span> + fromUser + <span class="string">'&amp;message='</span> + message);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showContent</span>(<span class="params">body</span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"#notice"</span>).append(<span class="string">"&lt;tr&gt;&lt;td&gt;"</span> + body + <span class="string">"&lt;/td&gt;&lt;/tr&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"form"</span>).on(<span class="string">'submit'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        e.preventDefault();</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">"#connect"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        connect();</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">"#disconnect"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        disconnect();</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">"#send"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        sendName();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这个代码我已经放在了GitHub上有需要的同学可以参考一下 <a href="https://github.com/ZhangJia97/springboot-websocket" target="_blank" rel="noopener">传送门</a></p><p>视频教程 <a href="http://edu.51cto.com/center/course/lesson/index?id=258985" target="_blank" rel="noopener">传送门</a></p>]]></content>
    
    <summary type="html">
    
      由于MT管理器论坛需要添加聊天功能，在网上搜了很多，最后发现了websocket可以用于实时通信和聊天室功能，然后看了51cto上的一个网课，花钱买了下来，跟着他做出来了一个demo，下面就来看一下什么是websocket吧
    
    </summary>
    
      <category term="Springboot" scheme="http://suiwo.xyz/categories/Springboot/"/>
    
    
      <category term="Java" scheme="http://suiwo.xyz/tags/Java/"/>
    
      <category term="Springboot" scheme="http://suiwo.xyz/tags/Springboot/"/>
    
      <category term="WebSocket" scheme="http://suiwo.xyz/tags/WebSocket/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode：10 正则表达式匹配（Java）</title>
    <link href="http://suiwo.xyz/2018/10/05/LeetCode%EF%BC%9A10-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D%EF%BC%88Java%EF%BC%89/"/>
    <id>http://suiwo.xyz/2018/10/05/LeetCode：10-正则表达式匹配（Java）/</id>
    <published>2018-10-05T08:27:28.000Z</published>
    <updated>2018-11-15T02:04:56.203Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LeetCode：10-正则表达式匹配"><a href="#LeetCode：10-正则表达式匹配" class="headerlink" title="LeetCode：10 正则表达式匹配"></a>LeetCode：10 正则表达式匹配</h2><hr><h5 id="给定一个字符串-s-和一个字符模式-p-。实现支持-‘-’-和-‘-’-的正则表达式匹配。"><a href="#给定一个字符串-s-和一个字符模式-p-。实现支持-‘-’-和-‘-’-的正则表达式匹配。" class="headerlink" title="给定一个字符串 (s) 和一个字符模式 (p)。实现支持 ‘.’ 和 ‘*’ 的正则表达式匹配。"></a>给定一个字符串 (s) 和一个字符模式 (p)。实现支持 ‘.’ 和 ‘*’ 的正则表达式匹配。</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&apos;.&apos; 匹配任意单个字符。</span><br><span class="line">&apos;*&apos; 匹配零个或多个前面的元素。</span><br></pre></td></tr></table></figure><h6 id="匹配应该覆盖整个字符串-s-，而不是部分字符串。"><a href="#匹配应该覆盖整个字符串-s-，而不是部分字符串。" class="headerlink" title="匹配应该覆盖整个字符串 (s) ，而不是部分字符串。"></a>匹配应该覆盖整个字符串 (s) ，而不是部分字符串。</h6><h5 id="说明"><a href="#说明" class="headerlink" title="说明:"></a>说明:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s 可能为空，且只包含从 a-z 的小写字母。</span><br><span class="line">p 可能为空，且只包含从 a-z 的小写字母，以及字符 . 和 *。</span><br></pre></td></tr></table></figure><h5 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1:"></a>示例 1:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入:</span><br><span class="line">s = &quot;aa&quot;</span><br><span class="line">p = &quot;a&quot;</span><br><span class="line">输出: false</span><br><span class="line">解释: &quot;a&quot; 无法匹配 &quot;aa&quot; 整个字符串。</span><br></pre></td></tr></table></figure><h5 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2:"></a>示例 2:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入:</span><br><span class="line">s = &quot;aa&quot;</span><br><span class="line">p = &quot;a*&quot;</span><br><span class="line">输出: true</span><br><span class="line">解释: &apos;*&apos; 代表可匹配零个或多个前面的元素, 即可以匹配 &apos;a&apos; 。因此, 重复 &apos;a&apos; 一次, 字符串可变为 &quot;aa&quot;。</span><br></pre></td></tr></table></figure><h5 id="示例-3"><a href="#示例-3" class="headerlink" title="示例 3:"></a>示例 3:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入:</span><br><span class="line">s = &quot;ab&quot;</span><br><span class="line">p = &quot;.*&quot;</span><br><span class="line">输出: true</span><br><span class="line">解释: &quot;.*&quot; 表示可匹配零个或多个(&apos;*&apos;)任意字符(&apos;.&apos;)。</span><br></pre></td></tr></table></figure><h5 id="示例-4"><a href="#示例-4" class="headerlink" title="示例 4:"></a>示例 4:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入:</span><br><span class="line">s = &quot;aab&quot;</span><br><span class="line">p = &quot;c*a*b&quot;</span><br><span class="line">输出: true</span><br><span class="line">解释: &apos;c&apos; 可以不被重复, &apos;a&apos; 可以被重复一次。因此可以匹配字符串 &quot;aab&quot;。</span><br></pre></td></tr></table></figure><h5 id="示例-5"><a href="#示例-5" class="headerlink" title="示例 5:"></a>示例 5:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入:</span><br><span class="line">s = &quot;mississippi&quot;</span><br><span class="line">p = &quot;mis*is*p*.&quot;</span><br><span class="line">输出: false</span><br></pre></td></tr></table></figure><h3 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isMatch</span><span class="params">(String text, String pattern)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//如果都为空则匹配成功</span></span><br><span class="line">        <span class="keyword">if</span> (pattern.isEmpty()) <span class="keyword">return</span> text.isEmpty();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//第一个是否匹配上</span></span><br><span class="line">        <span class="keyword">boolean</span> first_match = (!text.isEmpty() &amp;&amp; (pattern.charAt(<span class="number">0</span>) == text.charAt(<span class="number">0</span>) || pattern.charAt(<span class="number">0</span>) == <span class="string">'.'</span>));</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (pattern.length() &gt;= <span class="number">2</span> &amp;&amp; pattern.charAt(<span class="number">1</span>) == <span class="string">'*'</span>) &#123;</span><br><span class="line">            <span class="comment">//看有没有可能,剩下的pattern匹配上全部的text</span></span><br><span class="line">            <span class="comment">//看有没有可能,剩下的text匹配整个pattern</span></span><br><span class="line">            <span class="comment">//isMatch(text, pattern.substring(2)) 指当p第二个为*时，前面的字符不影响匹配所以可以忽略，所以将*以及*之前的一个字符删除后匹配之后的字符，这就是为什么用pattern.substring(2)</span></span><br><span class="line">            <span class="comment">//如果第一个已经匹配成功，并且第二个字符为*时，这是我们就要判断之后的需要匹配的字符串是否是多个前面的元素（*的功能），这就是first_match &amp;&amp; isMatch(text.substring(1), pattern))的意义</span></span><br><span class="line">            <span class="keyword">return</span> (isMatch(text, pattern.substring(<span class="number">2</span>)) ||</span><br><span class="line">                (first_match &amp;&amp; isMatch(text.substring(<span class="number">1</span>), pattern)));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//没有星星的情况:第一个字符相等,而且剩下的text,匹配上剩下的pattern，没有星星且第一个匹配成功，那么s和p同时向右移动一位看是否仍然能匹配成功</span></span><br><span class="line">            <span class="keyword">return</span> first_match &amp;&amp; isMatch(text.substring(<span class="number">1</span>), pattern.substring(<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="本文代码参考：https-blog-csdn-net-hit1110310422-article-details-80791446"><a href="#本文代码参考：https-blog-csdn-net-hit1110310422-article-details-80791446" class="headerlink" title="本文代码参考：https://blog.csdn.net/hit1110310422/article/details/80791446"></a>本文代码参考：<a href="https://blog.csdn.net/hit1110310422/article/details/80791446" target="_blank" rel="noopener">https://blog.csdn.net/hit1110310422/article/details/80791446</a></h5>]]></content>
    
    <summary type="html">
    
      给定一个字符串 (s) 和一个字符模式 (p)。实现支持 &#39;.&#39; 和 &#39;*&#39; 的正则表达式匹配。
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://suiwo.xyz/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构与算法" scheme="http://suiwo.xyz/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://suiwo.xyz/tags/LeetCode/"/>
    
      <category term="Java" scheme="http://suiwo.xyz/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>深入理解Java的接口和抽象类</title>
    <link href="http://suiwo.xyz/2018/09/02/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Java%E7%9A%84%E6%8E%A5%E5%8F%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB/"/>
    <id>http://suiwo.xyz/2018/09/02/深入理解Java的接口和抽象类/</id>
    <published>2018-09-02T15:21:54.000Z</published>
    <updated>2018-11-16T12:58:43.887Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-抽象类"><a href="#一-抽象类" class="headerlink" title="一.抽象类"></a>一.抽象类</h3><p>　　在了解抽象类之前，先来了解一下抽象方法。抽象方法是一种特殊的方法：它只有声明，而没有具体的实现。抽象方法的声明格式为：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure></p><p>　　抽象方法必须用abstract关键字进行修饰。如果一个类含有抽象方法，则称这个类为抽象类，抽象类必须在类前用abstract关键字修饰。因为抽象类中含有无具体实现的方法，所以不能用抽象类创建对象。</p><p>　　下面要注意一个问题：在《JAVA编程思想》一书中，将抽象类定义为“包含抽象方法的类”，但是后面发现如果一个类不包含抽象方法，只是用abstract修饰的话也是抽象类。也就是说抽象类不一定必须含有抽象方法。个人觉得这个属于钻牛角尖的问题吧，因为如果一个抽象类不包含任何抽象方法，为何还要设计为抽象类？所以暂且记住这个概念吧，不必去深究为什么。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">public</span>] <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassName</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>　　从这里可以看出，抽象类就是为了继承而存在的，如果你定义了一个抽象类，却不去继承它，那么等于白白创建了这个抽象类，因为你不能用它来做任何事情。对于一个父类，如果它的某个方法在父类中实现出来没有任何意义，必须根据子类的实际需求来进行不同的实现，那么就可以将这个方法声明为abstract方法，此时这个类也就成为abstract类了。</p><p>　　包含抽象方法的类称为抽象类，但并不意味着抽象类中只能有抽象方法，它和普通类一样，同样可以拥有成员变量和普通的成员方法。注意，抽象类和普通类的主要有三点区别：</p><ul><li><p>抽象方法必须为public或者protected（因为如果为private，则不能被子类继承，子类便无法实现该方法），缺省情况下默认为public。</p></li><li><p>抽象类不能用来创建对象；</p></li><li><p>如果一个类继承于一个抽象类，则子类必须实现父类的抽象方法。如果子类没有实现父类的抽象方法，则必须将子类也定义为为abstract类。</p></li></ul><p>在其他方面，抽象类和普通的类并没有区别。</p><h3 id="二-接口"><a href="#二-接口" class="headerlink" title="二.接口"></a>二.接口</h3><p>　　接口，英文称作interface，在软件工程中，接口泛指供别人调用的方法或者函数。从这里，我们可以体会到Java语言设计者的初衷，它是对行为的抽象。在Java中，定一个接口的形式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">public</span>] <span class="class"><span class="keyword">interface</span> <span class="title">InterfaceName</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>　　接口中可以含有 变量和方法。但是要注意，接口中的变量会被隐式地指定为public static final变量（并且只能是public static final变量，用private修饰会报编译错误），而方法会被隐式地指定为public abstract方法且只能是public abstract方法（用其他关键字，比如private、protected、static、 final等修饰会报编译错误），并且接口中所有的方法不能有具体的实现，也就是说，接口中的方法必须都是抽象方法。从这里可以隐约看出接口和抽象类的区别，接口是一种极度抽象的类型，它比抽象类更加“抽象”，并且一般情况下不在接口中定义变量。</p><p>　　要让一个类遵循某组特地的接口需要使用implements关键字，具体格式如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class ClassName implements Interface1,Interface2,[....]</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>　　可以看出，允许一个类遵循多个特定的接口。如果一个非抽象类遵循了某个接口，就必须实现该接口中的所有方法。对于遵循某个接口的抽象类，可以不实现该接口中的抽象方法。</p><h3 id="抽象类与接口的区别："><a href="#抽象类与接口的区别：" class="headerlink" title="抽象类与接口的区别："></a>抽象类与接口的区别：</h3><blockquote><p>1、概念不一样。接口是对动作的抽象，抽象类是对本质的抽象。<br>抽象类表示的是，这个对象是什么。接口表示的是，这个对象能做什么。比如，男人，女人，这两个类（如果是类的话……），他们的抽象类是人。说明，他们都是人。人可以吃东西，狗也可以吃东西，你可以把“吃东西”定义成一个接口，然后让这些类去实现它。<br>所以，在高级语言上，一个类只能继承一个类（抽象类）(正如人不可能同时是生物和非生物)，但是可以实现多个接口(吃饭接口、走路接口)。</p></blockquote><blockquote><p>2、使用不一样：</p><ul><li>a.抽象类 和 接口 都是用来抽象具体对象的. 但是接口的抽象级别最高</li><li>b.抽象类可以有具体的方法 和属性,  接口只能有抽象方法和不可变常- 量</li><li>c.抽象类主要用来抽象类别,接口主要用来抽象功能.</li><li>d.抽象类中，且不包含任何实现，派生类必须覆盖它们。接口中所有方法都必须是未实现的。</li><li>e.接口是设计的结果 ，抽象类是重构的结果</li></ul></blockquote><blockquote><p>3、使用方向：当你关注一个事物的本质的时候，用抽象类；当你关注一个操作的时候，用接口。<br>注意：抽象类的功能要远超过接口，但是，定义抽象类的代价高。因为高级语言来说（从实际设计上来说也是）每个类只能继承一个类。在这个类中，你必须继承或编写出其所有子类的所有共性。虽然接口在功能上会弱化许多，但是它只是针对一个动作的描述。而且你可以在一个类中同时实现多个接口。在设计阶段会降低难度的。</p></blockquote><p>下面看一个网上流传最广泛的例子：门和警报的例子：门都有open( )和close( )两个动作，此时我们可以定义通过抽象类和接口来定义这个抽象概念：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Door</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>　　或者：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Door</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>　　但是现在如果我们需要门具有报警alarm( )的功能，那么该如何实现？下面提供两种思路：</p><p>　　1）将这三个功能都放在抽象类里面，但是这样一来所有继承于这个抽象类的子类都具备了报警功能，但是有的门并不一定具备报警功能；</p><p>　　2）将这三个功能都放在接口里面，需要用到报警功能的类就需要实现这个接口中的open( )和close( )，也许这个类根本就不具备open( )和close( )这两个功能，比如火灾报警器。</p><p>　　从这里可以看出， Door的open() 、close()和alarm()根本就属于两个不同范畴内的行为，open()和close()属于门本身固有的行为特性，而alarm()属于延伸的附加行为。因此最好的解决办法是单独将报警设计为一个接口，包含alarm()行为,Door设计为单独的一个抽象类，包含open和close两种行为。再设计一个报警门继承Door类和实现Alarm接口。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Alram</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">alarm</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Door</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">open</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlarmDoor</span> <span class="keyword">extends</span> <span class="title">Door</span> <span class="keyword">implements</span> <span class="title">Alarm</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">oepn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="comment">//....</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="comment">//....</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">alarm</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="comment">//....</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考文章：<br><a href="https://blog.csdn.net/u012092924/article/details/78342193" target="_blank" rel="noopener">https://blog.csdn.net/u012092924/article/details/78342193</a><br><a href="https://www.cnblogs.com/dolphin0520/p/3811437.html" target="_blank" rel="noopener">https://www.cnblogs.com/dolphin0520/p/3811437.html</a></p>]]></content>
    
    <summary type="html">
    
      接口和抽象类，看了很多博客文章以及书记，感觉还是有点不得要领，有的时候还是不知道该如何选择，不过还是把阅读到的几篇感觉不错的文章记录下来
    
    </summary>
    
      <category term="Java" scheme="http://suiwo.xyz/categories/Java/"/>
    
    
      <category term="Java" scheme="http://suiwo.xyz/tags/Java/"/>
    
      <category term="编程基础" scheme="http://suiwo.xyz/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>java异常处理 Exception,error,运行时异常和一般异常有何异同</title>
    <link href="http://suiwo.xyz/2018/08/19/java%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86-Exception-error-%E8%BF%90%E8%A1%8C%E6%97%B6%E5%BC%82%E5%B8%B8%E5%92%8C%E4%B8%80%E8%88%AC%E5%BC%82%E5%B8%B8%E6%9C%89%E4%BD%95%E5%BC%82%E5%90%8C/"/>
    <id>http://suiwo.xyz/2018/08/19/java异常处理-Exception-error-运行时异常和一般异常有何异同/</id>
    <published>2018-08-19T12:34:48.000Z</published>
    <updated>2018-11-16T12:29:44.448Z</updated>
    
    <content type="html"><![CDATA[<h3 id="在java中，异常对象都是派生于Throwable类的一个实例。如果java内置的异常类不能够满足需求，用户还可以创建自己的异常类。"><a href="#在java中，异常对象都是派生于Throwable类的一个实例。如果java内置的异常类不能够满足需求，用户还可以创建自己的异常类。" class="headerlink" title="在java中，异常对象都是派生于Throwable类的一个实例。如果java内置的异常类不能够满足需求，用户还可以创建自己的异常类。"></a>在java中，异常对象都是派生于Throwable类的一个实例。如果java内置的异常类不能够满足需求，用户还可以创建自己的异常类。</h3><p><img src="/images/java异常处理-Exception-error-运行时异常和一般异常有何异同/8abb70109b89583dcbefca4783addd96.png" alt="这里写图片描述"></p><blockquote><p>Exception 和 Error 都是继承了 Throwable 类，在 Java 中只有 Throwable 类型的实例才可以被抛出（throw）或者捕获（catch），它是异常处理机制的基本组成类型。<br>Exception 和 Error 体现了 Java 平台设计者对不同异常情况的分类。Exception 是程序正常运行中，可以预料的意外情况，可能并且应该被捕获，进行相应处理。</p></blockquote><blockquote><ul><li>Error 是指在正常情况下，不大可能出现的情况，绝大部分的 Error 都会导致程序（比如 JVM 自身）处于非正常的、不可恢复状态。既然是非正常情况，所以不便于也不需要捕获，常见的比如 OutOfMemoryError 之类，都是 Error 的子类。</li></ul></blockquote><blockquote><ul><li>Exception 又分为可检查（checked）异常和不检查（unchecked）异常</li><li><ul><li>unchecked exception（非检查异常）：包括运行时异常（RuntimeException）和派生于Error类的异常。对于运行时异常，java编译器不要求必须进行异常捕获处理或者抛出声明，由程序员自行决定。 </li></ul></li><li><ul><li>checked exception（检查异常，编译异常，必须要处理的异常）<br>也：称非运行时异常（运行时异常以外的异常就是非运行时异常），java编译器强制程序员必须进行捕获处理，比如常见的IOExeption和SQLException。对于非运行时异常如果不进行捕获或者抛出声明处理，编译都不会通过。</li></ul></li></ul></blockquote><p>常见的RuntimeException（运行时异常）:</p><blockquote><ul><li>IndexOutOfBoundsException(下标越界异常) </li><li>NullPointerException(空指针异常) </li><li>NumberFormatException （String转换为指定的数字类型异常） </li><li>ArithmeticException -（算术运算异常 如除数为0） </li><li>ArrayStoreException - （向数组中存放与声明类型不兼容对象- - 异常） </li><li>SecurityException -（安全异常） </li><li>IOException（其他异常） </li><li>FileNotFoundException（文件未找到异常。） </li><li>IOException（操作输入流和输出流时可能出现的异常。） </li><li>EOFException （文件已结束异常）</li></ul></blockquote><p>参考文章：<br><a href="https://blog.csdn.net/qq_28849965/article/details/80310153" target="_blank" rel="noopener">https://blog.csdn.net/qq_28849965/article/details/80310153</a><br><a href="https://blog.csdn.net/m0_37531231/article/details/79502778" target="_blank" rel="noopener">https://blog.csdn.net/m0_37531231/article/details/79502778</a></p>]]></content>
    
    <summary type="html">
    
      写代码过程中遇到error非常常见。我们就要区别java异常处理 Exception,error,运行时异常和一般异常有何异同
    
    </summary>
    
      <category term="Java" scheme="http://suiwo.xyz/categories/Java/"/>
    
    
      <category term="Java" scheme="http://suiwo.xyz/tags/Java/"/>
    
      <category term="编程语言" scheme="http://suiwo.xyz/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>final,finally,finalize的区别</title>
    <link href="http://suiwo.xyz/2018/08/19/final-finally-finalize%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://suiwo.xyz/2018/08/19/final-finally-finalize的区别/</id>
    <published>2018-08-19T07:01:05.000Z</published>
    <updated>2018-11-16T12:06:49.889Z</updated>
    
    <content type="html"><![CDATA[<h2 id="final-finally-finalize的区别"><a href="#final-finally-finalize的区别" class="headerlink" title="final,finally,finalize的区别"></a>final,finally,finalize的区别</h2><h3 id="1-简单区别："><a href="#1-简单区别：" class="headerlink" title="1.简单区别："></a>1.简单区别：</h3><blockquote><ul><li>final用于声明属性，方法和类，分别表示属性不可交变，方法不可覆盖，类不可继承。</li><li>finally是异常处理语句结构的一部分，表示总是执行。</li><li>finalize是Object类的一个方法，在垃圾收集器执行的时候会调用被回收对象的此方法，供垃圾收集时的其他资源回收，例如关闭文件等。</li></ul></blockquote><h3 id="中等区别："><a href="#中等区别：" class="headerlink" title="中等区别："></a>中等区别：</h3><blockquote><ul><li><p>final：java中的关键字，修饰符。<br>A).如果一个类被声明为final，就意味着它不能再派生出新的子类，不能作为父类被继承。因此，一个类不能同时被声明为abstract抽象类的和final的类。<br>B).如果将变量或者方法声明为final，可以保证它们在使用中不被改变.<br>　　1)被声明为final的变量必须在声明时给定初值，而在以后的引用中只能读取，不可修改。<br>　　2)被声明final的方法只能使用，不能重载。<br>finally：java的一种异常处理机制。</p></li><li><p>finally是对Java异常处理模型的最佳补充。finally结构使代码总会执行，而不管无异常发生。使用finally可以维护对象的内部状态，并可以清理非内存资源。特别是在关闭数据库连接这方面，如果程序员把数据库连接的close()方法放到finally中，就会大大降低程序出错的几率。</p></li><li><p>finalize：Java中的一个方法名。<br>Java技术使用finalize()方法在垃圾收集器将对象从内存中清除出去前，做必要的清理工作。这个方法是由垃圾收集器在确定这个对象没被引用时对这个对象调用的。它是在Object类中定义的，因此所的类都继承了它。子类覆盖finalize()方法以整理系统资源或者执行其他清理工作。finalize()方法是在垃圾收集器删除对象之前对这个对象调用的。</p></li></ul></blockquote><h3 id="3-详细区别："><a href="#3-详细区别：" class="headerlink" title="3.详细区别："></a>3.详细区别：</h3><p>这是一道再经典不过的面试题了，我们在各个公司的面试题中几乎都能看到它的身影。final、finally和finalize虽然长得像孪生兄弟一样，但是它们的含义和用法却是大相径庭。</p><h4 id="final"><a href="#final" class="headerlink" title="final"></a>final</h4><blockquote><p>final关键字我们首先来说说final。它可以用于以下四个地方:<br>1).定义变量，包括静态的和非静态的。<br>2).定义方法的参数。<br>3).定义方法。<br>4).定义类。</p></blockquote><h5 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h5><blockquote><ul><li>第一种情况：<br>如果final修饰的是一个基本类型，就表示这个变量被赋予的值是不可变的，即它是个常量；<br>如果final修饰的是一个对象，就表示这个变量被赋予的引用是不可变的<br>这里需要提醒大家注意的是，不可改变的只是这个变量所保存的引用，并不是这个引用所指向的对象。</li><li>第二种情况：<br>final的含义与第一种情况相同。<br>实际上对于前两种情况，一种更贴切的表述final的含义的描述，那就是，如果一个变量或方法参数被final修饰，就表示它只能被赋值一次，但是JAVA虚拟机为变量设定的默认值不记作一次赋值。被final修饰的变量必须被初始化。初始化的方式以下几种：<br>1.在定义的时候初始化。<br>2.final变量可以在初始化块中初始化，不可以在静态初始化块中初始化。<br>3.静态final变量可以在定义时初始化，也可以在静态初始化块中初始化，不可以在初始化块中初始化。<br>4.final变量还可以在类的构造器中初始化，但是静态final变量不可以。</li></ul></blockquote><p>通过下面的代码可以验证以上的观点：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FinalTest</span></span>&#123;</span><br><span class="line">　　<span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span> A=<span class="number">10</span>; <span class="comment">//在定义时初始化</span></span><br><span class="line">　　<span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span> B;&#123;B=<span class="number">20</span>;&#125; <span class="comment">//在初始化块中初始化</span></span><br><span class="line"></span><br><span class="line">　　<span class="comment">//非静态final变量不能在静态初始化块中初始化    </span></span><br><span class="line">　　<span class="comment">//public final int C;static&#123;//C=30; &#125;</span></span><br><span class="line"></span><br><span class="line">　　<span class="comment">//静态常量，在定义时初始化</span></span><br><span class="line">　　<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> STATIC_D=<span class="number">40</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//静态常量，在静态初始化块中初始化</span></span><br><span class="line">　　<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> STATIC_E;<span class="keyword">static</span>&#123;STATIC_E = <span class="number">50</span>;&#125;</span><br><span class="line"></span><br><span class="line">　　<span class="comment">//静态变量不能在初始化块中初始化    </span></span><br><span class="line">　　<span class="comment">//public static final int  STATIC_F;&#123;STATIC_F=60;&#125;</span></span><br><span class="line"></span><br><span class="line">　　<span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span> G;</span><br><span class="line"></span><br><span class="line">　　<span class="comment">//静态final变量不可以在构造器中初始化    </span></span><br><span class="line">　　<span class="comment">//public static final int STATIC_H;</span></span><br><span class="line"></span><br><span class="line">　　<span class="comment">//在构造器中初始化         </span></span><br><span class="line">　　<span class="function"><span class="keyword">public</span> <span class="title">finalTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">　　　　G=<span class="number">70</span>;</span><br><span class="line">　　　　<span class="comment">//静态final变量不可以在构造器中初始化</span></span><br><span class="line">　　　　<span class="comment">//STATIC_H=80;</span></span><br><span class="line"></span><br><span class="line">　　　　<span class="comment">//给final的变量第二次赋值时，编译会报错</span></span><br><span class="line">　　　　<span class="comment">//A=99;</span></span><br><span class="line">　　　　<span class="comment">//STATIC_D=99;</span></span><br><span class="line">　　&#125;</span><br><span class="line"></span><br><span class="line">　　<span class="comment">//final变量未被初始化，编译时就会报错</span></span><br><span class="line">　　<span class="comment">//public final int L;</span></span><br><span class="line"></span><br><span class="line">　　<span class="comment">//静态final变量未被初始化，编译时就会报错</span></span><br><span class="line">　　<span class="comment">//public static final int STATIC_J;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>我们运行上面的代码之后出了可以发现final变量（常量和静态final变量（静态常量被初始化时，编译会报错。<br>用final修饰的变量（常量比非final的变量（普通变量拥更高的效率，因此我们在际编程中应该尽可能多的用常量来代替普通变量。</p></blockquote><h5 id="定义方法"><a href="#定义方法" class="headerlink" title="定义方法"></a>定义方法</h5><blockquote><p>当final用来定义一个方法时，它表示这个方法不可以被子类重写，但是并不影响它被子类继承。我们写段代码来验证一下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParentClass</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">TestFinal</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"父类--这是一个final方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SubClass</span> <span class="keyword">extends</span> <span class="title">ParentClass</span></span>&#123;</span><br><span class="line">    <span class="comment">//子类无法重写（override父类的final方法，否则编译时会报错</span></span><br><span class="line">    <span class="comment">/* public void TestFinal()&#123;</span></span><br><span class="line"><span class="comment">           System.out.println("子类--重写final方法");</span></span><br><span class="line"><span class="comment">    &#125; */</span>   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[]args)</span></span>&#123;</span><br><span class="line">        SubClass sc = <span class="keyword">new</span> SubClass();</span><br><span class="line">        sc.TestFinal();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>这里需要特殊说明的是，具有private访问权限的方法也可以增加final修饰，但是由于子类无法继承private方法，因此也无法重写它。编译器在处理private方法时，是照final方来对待的，这样可以提高该方法被调用时的效率。不过子类仍然可以定义同父类中private方法具同样结构的方法，但是这并不会产生重写的效果，而且它们之间也不存在必然联系。</p></blockquote><h5 id="定义类"><a href="#定义类" class="headerlink" title="定义类"></a>定义类</h5><blockquote><p>最后我们再来回顾一下final用于类的情况。这个大家应该也很熟悉了，因为我们最常用的String类就是final的。由于final类不允许被继承，编译器在处理时把它的所方法都当作final的，因此final类比普通类拥更高的效率。而由关键字abstract定义的抽象类含必须由继承自它的子类重载实现的抽象方法，因此无法同时用final和abstract来修饰同一个类。同样的道理，final也不能用来修饰接口。 final的类的所方法都不能被重写，但这并不表示final的类的属性（变量值也是不可改变的，要想做到final类的属性值不可改变，必须给它增加final修饰，请看下面的例子：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">FinalTest</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i =<span class="number">20</span>;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> j=<span class="number">50</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">          FinalTest ft = <span class="keyword">new</span> FinalTest();</span><br><span class="line">          ft.i = <span class="number">99</span>;<span class="comment">/*final类FinalTest的属性值 i是可以改变的，因为属性值i前面没final修饰*/</span></span><br><span class="line">          <span class="comment">//ft.j=49;//报错....因为j属性是final的不可以改变。</span></span><br><span class="line">          System.out.println(ft.i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>运行上面的代码试试看，结果是99，而不是初始化时的10。</p></blockquote><h4 id="finally语句"><a href="#finally语句" class="headerlink" title="finally语句"></a>finally语句</h4><blockquote><p>接下来我们一起回顾一下finally的用法。finally只能用在try/catch语句中并且附带着一个语句块，表示这段语句最终总是被执行。请看下面的代码：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">FinallyTest</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException();</span><br><span class="line">        &#125;<span class="keyword">catch</span>(NullPointerException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">"程序抛出了异常"</span>);</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="comment">//这里总会被执行，不受break,return影响另如数据库连接的close()一般写在这里，可以降低程序的出错几率</span></span><br><span class="line">            System.out.println(<span class="string">"执行了finally语句块"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果说明了finally的作用：</p><blockquote><ul><li>1.程序抛出了异常</li><li>2.执行了finally语句块请大家注意，捕获程序抛出的异常之后，既不加处理，也不继续向上抛出异常，并不是良好的编程习惯，它掩盖了程序执行中发生的错误，这里只是方便演示，请不要学习。</li></ul></blockquote><p>那么，没一种情况使finally语句块得不到执行呢？<br>return、continue、break这个可以打乱代码顺序执行语句的规律。那我们就来试试看，这个语句是否能影响finally语句块的执行：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">FinallyTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">//测试return语句</span></span><br><span class="line">    <span class="comment">//结果显示：编译器在编译return new ReturnClass();时，</span></span><br><span class="line">    <span class="comment">//将它分成了两个步骤，new ReturnClass()和return，前一个创建对象的语句是在finally语句块之前被执行的，</span></span><br><span class="line">    <span class="comment">//而后一个return语句是在finally语句块之后执行的，也就是说finally语句块是在程序退出方法之前被执行的</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ReturnClass <span class="title">testReturn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ReturnClass();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"执行了finally语句"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//测试continue语句</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testContinue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.println(i);</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">1</span>)&#123;</span><br><span class="line">                    System.out.println(<span class="string">"con"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"执行了finally语句"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//测试break语句</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testBreak</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.println(i);</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"执行了finally语句"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FinallyTest ft = <span class="keyword">new</span> FinallyTest();</span><br><span class="line">        <span class="comment">// 测试return语句</span></span><br><span class="line">        ft.testReturn();</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="comment">// 测试continue语句</span></span><br><span class="line">        ft.testContinue();</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="comment">// 测试break语句</span></span><br><span class="line">        ft.testBreak();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ReturnClass</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ReturnClass</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"执行了return语句"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上面这段代码的运行结果如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">执行了<span class="keyword">return</span>语句</span><br><span class="line">执行了<span class="keyword">finally</span>语句</span><br><span class="line">执行了<span class="keyword">finally</span>语句</span><br><span class="line">con</span><br><span class="line">执行了<span class="keyword">finally</span>语句</span><br><span class="line">执行了<span class="keyword">finally</span>语句</span><br><span class="line">执行了<span class="keyword">finally</span>语句</span><br><span class="line">执行了<span class="keyword">finally</span>语句</span><br></pre></td></tr></table></figure></p><blockquote><p>很明显，return、continue和break都没能阻止finally语句块的执行。从输出的结果来看，return语句似乎在finally语句块之前执行了，事实真的如此吗？我们来想想看，return语句的作用是什么呢？是退出当前的方法，并将值或对象返回。如果 finally语句块是在return语句之后执行的，那么return语句被执行后就已经退出当前方法了，finally语句块又如何能被执行呢？因此，正确的执行顺序应该是这样的：编译器在编译return new ReturnClass();时，将它分成了两个步骤，new ReturnClass()和return，前一个创建对象的语句是在finally语句块之前被执行的，而后一个return语句是在finally语句块之后执行的，也就是说finally语句块是在程序退出方法之前被执行的。同样，finally语句块是在循环被跳过（continue和中断（break之前被执行的</p></blockquote><p>总结：</p><blockquote><p>总结：finally块的语句在try或catch中的return语句执行之后返回之前执行且finally里的修改语句可能影响也可能不影响try或catch中 return已经确定的返回值，若finally里也有return语句则覆盖try或catch中的return语句直接返回。</p></blockquote><h5 id="finalize方法"><a href="#finalize方法" class="headerlink" title="finalize方法"></a>finalize方法</h5><blockquote><p>最后，我们再来看看finalize，它是一个方法，属于java.lang.Object类，它的定义如下：protected void finalize()throws Throwable{}众所周知，finalize()方法是GC（garbagecollector运行机制的一部分,在此我们只说说finalize()方法的作用是什么呢？finalize()方法是在GC清理它所从属的对象时被调用的，如果执行它的过程中抛出了无法捕获的异常（uncaughtexception，GC将终止对改对象的清理，并且该异常会被忽略；直到下一次GC开始清理这个对象时，它的finalize()会被再次调用。</p></blockquote><p>参考文章：<br><a href="https://www.cnblogs.com/gjfbk/p/9072059.html" target="_blank" rel="noopener">https://www.cnblogs.com/gjfbk/p/9072059.html</a><br><a href="https://www.cnblogs.com/smart-hwt/p/8257330.html" target="_blank" rel="noopener">https://www.cnblogs.com/smart-hwt/p/8257330.html</a></p>]]></content>
    
    <summary type="html">
    
      final,finally,finalize随想看上去有些相似，但是实际上则是差别，网上很多后端面试题也有这个，所以对此进行一个汇总
    
    </summary>
    
      <category term="Java" scheme="http://suiwo.xyz/categories/Java/"/>
    
    
      <category term="Java" scheme="http://suiwo.xyz/tags/Java/"/>
    
      <category term="编程语言" scheme="http://suiwo.xyz/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>面向对象的特征：继承封装和多态</title>
    <link href="http://suiwo.xyz/2018/08/16/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%89%B9%E5%BE%81%EF%BC%9A%E7%BB%A7%E6%89%BF%E5%B0%81%E8%A3%85%E5%92%8C%E5%A4%9A%E6%80%81/"/>
    <id>http://suiwo.xyz/2018/08/16/面向对象的特征：继承封装和多态/</id>
    <published>2018-08-16T09:35:17.000Z</published>
    <updated>2018-11-16T12:02:41.624Z</updated>
    
    <content type="html"><![CDATA[<h2 id="面向对象的特征：继承、封装和多态"><a href="#面向对象的特征：继承、封装和多态" class="headerlink" title="面向对象的特征：继承、封装和多态"></a>面向对象的特征：继承、封装和多态</h2><blockquote><ul><li>封装是指将某事物的属性和行为包装到对象中，这个对象只对外公布需要公开的属性和行为，而这个公布也是可以有选择性的公布给其它对象。在java中能使用private、protected、public三种修饰符或不用（即默认defalut）对外部对象访问该对象的属性和行为进行限制。</li><li>继承是子对象可以继承父对象的属性和行为，亦即父对象拥有的属性和行为，其子对象也就拥有了这些属性和行为。这非常类似大自然中的物种遗传。</li><li>多态不是很好解释：更倾向于使用java中的固定用法，即overriding（重写）和overload（重载）。多态则是体现在overriding（重写）上，而overload（重载）则不属于面向对象中多态的范畴，因为overload（重载）概念在非面向对象中也存在。overriding（重写）是面向对象中的多态，因为overriding（重写）是与继承紧密联系，是面向对象所特有的。多态是指父对象中的同一个行为能在其多个子对象中有不同的表现。也就是说子对象可以使用重写父对象中的行为，使其拥有不同于父对象和其它子对象的表现，这就是overriding（重写）。</li></ul></blockquote><blockquote><ul><li>多态的定义：指允许不同类的对象对同一消息做出响应。即同一消息可以根据发送对象的不同而采用多种不同的行为方式。（发送消息就是函数调用）</li><li>实现多态的技术称为：动态绑定（dynamic binding），是指在执行期间判断所引用对象的实际类型，根据其实际的类型调用其相应的方法。</li><li>多态的作用：消除类型之间的耦合关系。</li></ul></blockquote><blockquote><p>现实中，关于多态的例子不胜枚举。比方说按下 F1 键这个动作，如果当前在 Flash 界面下弹出的就是 AS 3 的帮助文档；如果当前在 Word 下弹出的就是 Word 帮助；在 Windows 下弹出的就是 Windows 帮助和支持。同一个事件发生在不同的对象上会产生不同的结果。</p></blockquote><blockquote><p>多态存在的三个必要条件：<br>　　一、要有继承；<br>　　二、要有重写；<br>　　三、父类引用指向子类对象。</p></blockquote><p>父类引用指向子类对象指的是：</p><blockquote><p>例如父类Animal，子类Cat,Dog。其中Animal可以是类也可以是接口，Cat和Dog是继承或实现Animal的子类。<br>Animal animal = new Cat();<br>即声明的是父类，实际指向的是子类的一个对象。<br>那这么使用的优点是什么，为什么要这么用？可以用这几个关键词来概括：多态、动态链接，向上转型<br>也有人说这是面向接口编程，可以降低程序的耦合性，即调用者不必关心调用的是哪个对象，只需要针对接口编程就可以了，被调用者对于调用者是完全透明的。让你更关注父类能做什么,而不去关心子类是具体怎么做的,你可以随时替换一个子类,也就是随时替换一个具体实现,而不用修改其他.<br>以后结合设计模式（如工厂模式，代理模式）和反射机制可能有更深理解。<br>下面介绍java的多态性和其中的动态链接，向上转型：<br>面向对象的三个特征：封装、继承和多态；<br>封装隐藏了类的内部实现机制，可以在不影响使用者的前提下修改类的内部结构，同时保护了数据；<br>继承是为了重用父类代码，子类继承父类就拥有了父类的成员。<br>方法的重写、重载与动态连接构成多态性。Java之所以引入多态的概念，原因之一是它在类的继承问题上和C++不同，后者允许多继承，这确实给其带来的非常强大的功能，但是复杂的继承关系也给C++开发者带来了更大的麻烦，为了规避风险，Java只允许单继承，派生类与基类间有IS-A的关系（即“猫”is a “动物”）。这样做虽然保证了继承关系的简单明了，但是势必在功能上有很大的限制，所以，Java引入了多态性的概念以弥补这点的不足，此外，抽象类和接口也是解决单继承规定限制的重要手段。同时，多态也是面向对象编程的精髓所在。<br>理解多态，首先要知道“向上转型”。<br>我定义了一个子类Cat，它继承了Animal类，那么后者就是前者是父类。我可以通过<br>Cat c = new Cat();<br>实例化一个Cat的对象，这个不难理解。但当我这样定义时：<br>Animal a = new Cat();<br>这代表什么意思呢？<br>很简单，它表示我定义了一个Animal类型的引用，指向新建的Cat类型的对象。由于Cat是继承自它的父类Animal，所以Animal类型的引用是可以指向Cat类型的对象的。这就是“向上转型”。<br>那么这样做有什么意义呢？因为子类是对父类的一个改进和扩充，所以一般子类在功能上较父类更强大，属性较父类更独特， 定义一个父类类型的引用指向一个子类的对象既可以使用子类强大的功能，又可以抽取父类的共性。 所以，父类类型的引用可以调用父类中定义的所有属性和方法，而对于子类中定义而父类中没有的方法，父类引用是无法调用的；<br>那什么是动态链接呢？当父类中的一个方法只有在父类中定义而在子类中没有重写的情况下，才可以被父类类型的引用调用； 对于父类中定义的方法，如果子类中重写了该方法，那么父类类型的引用将会调用子类中的这个方法，这就是动态连接。</p></blockquote><p>参考文章：<br><a href="https://www.cnblogs.com/mengchunchen/p/7890729.html" target="_blank" rel="noopener">https://www.cnblogs.com/mengchunchen/p/7890729.html</a><br><a href="https://www.cnblogs.com/ChrisMurphy/p/5054256.html" target="_blank" rel="noopener">https://www.cnblogs.com/ChrisMurphy/p/5054256.html</a></p>]]></content>
    
    <summary type="html">
    
      面向对象三大特性:封装、继承、多态 JAVA面向对象三大特性详解
    
    </summary>
    
      <category term="Java" scheme="http://suiwo.xyz/categories/Java/"/>
    
    
      <category term="Java" scheme="http://suiwo.xyz/tags/Java/"/>
    
      <category term="编程语言" scheme="http://suiwo.xyz/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Django发送HTML邮件</title>
    <link href="http://suiwo.xyz/2018/08/09/Django%E5%8F%91%E9%80%81HTML%E9%82%AE%E4%BB%B6/"/>
    <id>http://suiwo.xyz/2018/08/09/Django发送HTML邮件/</id>
    <published>2018-08-09T08:03:24.000Z</published>
    <updated>2018-11-16T13:22:30.555Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Django发送HTML邮件"><a href="#Django发送HTML邮件" class="headerlink" title="Django发送HTML邮件"></a>Django发送HTML邮件</h3><hr><p>之前关于使用Django发送邮件已经写过一篇文章，不会在Django中发送邮件的话，可以先看这个<a href="http://suiwo.xyz/2018/03/16/Django%E9%9B%86%E6%88%90%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81%E5%8A%9F%E8%83%BD/">传送门</a></p><p>在这个基础上只需要稍加配置就可以有一个比较好看的HTML而不是单调几句话的页面，话不多说，直接上代码<br>models.py的新生类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NewStudent</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    DEPARTMENT_CHOICE=&#123;</span><br><span class="line">        (<span class="string">'3'</span>,<span class="string">'技术部'</span>),</span><br><span class="line">        (<span class="string">'2'</span>,<span class="string">'新媒体'</span>),</span><br><span class="line">        (<span class="string">'1'</span>,<span class="string">'办公室'</span>),</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># unique=True 解决异步问题后将唯一性加上</span></span><br><span class="line">    email = models.EmailField(default=<span class="keyword">None</span>, blank=<span class="keyword">True</span>, null=<span class="keyword">False</span>, verbose_name=<span class="string">'邮箱'</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">50</span>, default=<span class="keyword">None</span>, blank=<span class="keyword">True</span>, null=<span class="keyword">True</span>, verbose_name=<span class="string">'姓名'</span>)</span><br><span class="line">    student_id = models.CharField(max_length=<span class="number">9</span>, default=<span class="keyword">None</span>, blank=<span class="keyword">True</span>, null=<span class="keyword">False</span>, verbose_name=<span class="string">'学号'</span>)</span><br><span class="line">    qq = models.CharField(max_length=<span class="number">11</span>,null=<span class="keyword">False</span>,verbose_name=<span class="string">'QQ号'</span>)</span><br><span class="line">    choice = models.CharField(max_length=<span class="number">10</span>,choices=DEPARTMENT_CHOICE,default=<span class="number">0</span>,null=<span class="keyword">False</span>,verbose_name=<span class="string">'部门'</span>)</span><br><span class="line">    code = models.CharField(max_length=<span class="number">20</span>,default=<span class="keyword">None</span>, verbose_name=<span class="string">"邮箱验证码"</span>)</span><br><span class="line">    is_success = models.BooleanField(default=<span class="keyword">False</span>,verbose_name=<span class="string">'邮箱已验证'</span>)</span><br><span class="line">    register_time = models.DateTimeField(auto_now_add=<span class="keyword">True</span>,verbose_name=<span class="string">'注册时间'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"新生信息"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><p>邮件发送的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#new_student是前端传过来的新生信息</span></span><br><span class="line"><span class="comment">#EmailMultiAlternatives是邮件信息相关的model，邮件发送的博文中有描述</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_studentinfo</span><span class="params">(request, new_student)</span>:</span></span><br><span class="line">    code = random_str(<span class="number">16</span>)</span><br><span class="line">    new_student.code = code</span><br><span class="line">    active_url = str(EMAIL_ACTIVE_URL) + str(code)</span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">'student_id'</span> : str(new_student.student_id),</span><br><span class="line">        <span class="string">'name'</span> : str(new_student.name),</span><br><span class="line">        <span class="string">'active_url'</span> : str(active_url),</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 发送的html模板的名称</span></span><br><span class="line">    email_template_name = <span class="string">'email_template.html'</span></span><br><span class="line">    t = loader.get_template(email_template_name)</span><br><span class="line">    html_content = t.render(context)</span><br><span class="line">    msg = EmailMultiAlternatives(EMAIL_TITLE, html_content, DEFAULT_FROM_EMAIL, [new_student.email])</span><br><span class="line">    msg.attach_alternative(html_content, <span class="string">"text/html"</span>)</span><br><span class="line">    msg.send()</span><br></pre></td></tr></table></figure><p>下面是email_template.html的代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vinta<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, maximum-scale=2 user-scalable = yes"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video &#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">            border: 0;</span></span><br><span class="line"><span class="undefined">            font-size: 100%;</span></span><br><span class="line"><span class="undefined">            font: inherit;</span></span><br><span class="line"><span class="undefined">            vertical-align: baseline;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        body &#123;</span></span><br><span class="line"><span class="undefined">            line-height: 1;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        body &#123;</span></span><br><span class="line"><span class="undefined">            background: #424242; /* 标准的语法 */</span></span><br><span class="line"><span class="undefined">            font-family: "HelveticaNeue", "Helvetica Neue", Helvetica, Arial, serif;</span></span><br><span class="line"><span class="undefined">            font-size: 14px;</span></span><br><span class="line"><span class="undefined">            font-weight: 400;</span></span><br><span class="line"><span class="undefined">            line-height: 1.5em;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        h1, h2, h3, h4 &#123;</span></span><br><span class="line"><span class="undefined">            font-family: "HelveticaNeue", "Helvetica Neue", Helvetica, Arial, serif;</span></span><br><span class="line"><span class="undefined">            color: #000000;</span></span><br><span class="line"><span class="undefined">            font-style: normal;</span></span><br><span class="line"><span class="undefined">            line-height: 1em;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        h1 &#123;</span></span><br><span class="line"><span class="undefined">            font-size: 18px;</span></span><br><span class="line"><span class="undefined">            text-transform: uppercase;</span></span><br><span class="line"><span class="undefined">            font-weight: 700;</span></span><br><span class="line"><span class="undefined">            margin-bottom: 15px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        h2 &#123;</span></span><br><span class="line"><span class="undefined">            font-size: 16px;</span></span><br><span class="line"><span class="undefined">            font-weight: 700;</span></span><br><span class="line"><span class="undefined">            margin-top: 20px;</span></span><br><span class="line"><span class="undefined">            margin-bottom: 5px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        h3 &#123;</span></span><br><span class="line"><span class="undefined">            font-size: 15px;</span></span><br><span class="line"><span class="undefined">            color: #5e5e5e;</span></span><br><span class="line"><span class="undefined">            font-style: italic;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        h4 &#123;</span></span><br><span class="line"><span class="undefined">            font-size: 16px;</span></span><br><span class="line"><span class="undefined">            font-style: italic;</span></span><br><span class="line"><span class="undefined">            font-weight: 400;</span></span><br><span class="line"><span class="undefined">            margin-bottom: 0px;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="undefined">            top: -7px;</span></span><br><span class="line"><span class="undefined">            width: 130px;</span></span><br><span class="line"><span class="undefined">            margin-left: -65px;</span></span><br><span class="line"><span class="undefined">            left: 50%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        #wrapper &#123;</span></span><br><span class="line"><span class="undefined">            width: 940px;</span></span><br><span class="line"><span class="undefined">            margin: 0 auto;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        .logo &#123;</span></span><br><span class="line"><span class="undefined">            width: 276px;</span></span><br><span class="line"><span class="undefined">            height: 58px;</span></span><br><span class="line"><span class="undefined">            padding: 40px 0px;</span></span><br><span class="line"><span class="undefined">            margin: 0 auto;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        /*----- main content of page -----*/</span></span><br><span class="line"><span class="undefined">        #content &#123;</span></span><br><span class="line"><span class="undefined">            background:#ffffff;</span></span><br><span class="line"><span class="undefined">            width: 620px;</span></span><br><span class="line"><span class="undefined">            padding: 40px 160px;</span></span><br><span class="line"><span class="undefined">            float: left;</span></span><br><span class="line"><span class="undefined">            box-shadow: 0px 1px 2px 0px #000000;</span></span><br><span class="line"><span class="undefined">            -moz-box-shadow: 0px 1px 2px 0px #000000;</span></span><br><span class="line"><span class="undefined">            -webkit-box-shadow: 0px 1px 2px 0px #000000;</span></span><br><span class="line"><span class="undefined">            text-align: left;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        .launch &#123;</span></span><br><span class="line"><span class="undefined">            font-size: 2em;</span></span><br><span class="line"><span class="undefined">            font-weight: bolder;</span></span><br><span class="line"><span class="undefined">            width: 402px;</span></span><br><span class="line"><span class="undefined">            height: 108px;</span></span><br><span class="line"><span class="undefined">            margin: 0 auto;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--content starts--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"launch"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://pd2qkcgty.bkt.clouddn.com/logo.png"</span> <span class="attr">height</span>=<span class="string">"70"</span> <span class="attr">width</span>=<span class="string">"auto"</span> <span class="attr">style</span>=<span class="string">"position: relative;left: -80%;top: -40%"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span>致学弟学妹的一封信<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span> &#123;&#123; student_id &#125;&#125;&#123;&#123; name &#125;&#125;同学你好：<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">"line-height: 30px"</span>&gt;</span> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;首先祝贺你正式成为计软网安院科协的一员，从加入院科协的那一刻开始，你将经历一段从没经历和感受过的奇妙旅程。我们希望未来的一年中你能在科协这个大家庭中结交志同道合的朋友，从科协牛人中获取经验，成为技术上的大牛，或者在科协活动的举办中锻炼自己的活动组织能力。我们更希望一年后的你能像我们一样在科协为未来的学弟学妹提供技术和学习上的帮助。</span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;愿初来南邮的你，在未来的一年中能在计软网安院科协这片沃土上，施展自己的才华，活出自己的精彩。(๑•̀ㅂ•́)و✧<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; active_url &#125;&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">style</span>=<span class="string">"width: 620px;border-radius: 3px;background: #3498db;border: 4px;height: 35px;border: #2e6da4;color: white;font-family: 宋体;font-weight: bolder"</span>&gt;</span></span><br><span class="line">                点击完成验证</span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 80%;height:100%;float: left"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"position: relative;width: 450px;"</span>&gt;</span></span><br><span class="line">                    加入科协，你需要什么？<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                    你需要的是 Interest——兴趣 Passion——激情 Perseverance——毅力</span><br><span class="line">                    世界本没路，走的人多了就有了路，没有谁天生就会，一切都是通过不断学习获得。从零开始，你将在这里慢慢成长。在这里你将会获得毕生的朋友，因为你们志同道合。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 20%;float: left;height: 100%"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://pd2qkcgty.bkt.clouddn.com/sacc_QR_Code.png"</span> <span class="attr">alt</span>=<span class="string">"微信二维码"</span> <span class="attr">id</span>=<span class="string">"img-left"</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">style</span>=<span class="string">"width: 110px;height: 110px"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"text-align: right"</span>&gt;</span>南京邮电大学计软网安院科协<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                njupt.sacc@outlook.com<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"text-align: center"</span>&gt;</span>sacc期待你的加入<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最后展示一下效果:<br>PC端：</p><p><img src="/images/Django发送HTML邮件/B4F54578-2695-4CB8-A699-4138C70F5786.png" alt="在这里插入图片描述"></p><p>移动端：</p><p><img src="/images/Django发送HTML邮件/F3C7CB3A-677D-4AAC-BD2B-579C1FFEB619.png" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      由于想给新生一些仪式感，所以委托了王老板写了一个HTML的页面，结果展示效果非常好，希望这个能给新生一种仪式感吧（PS：希望今年的院科协能蒸蒸日上吧）
    
    </summary>
    
      <category term="Django" scheme="http://suiwo.xyz/categories/Django/"/>
    
    
      <category term="python" scheme="http://suiwo.xyz/tags/python/"/>
    
      <category term="Django" scheme="http://suiwo.xyz/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>玄学解决BUG</title>
    <link href="http://suiwo.xyz/2018/07/30/%E7%8E%84%E5%AD%A6%E8%A7%A3%E5%86%B3BUG/"/>
    <id>http://suiwo.xyz/2018/07/30/玄学解决BUG/</id>
    <published>2018-07-30T05:48:54.000Z</published>
    <updated>2018-11-15T01:51:56.483Z</updated>
    
    <content type="html"><![CDATA[<h4 id="在网上汇总了一些企图玄学的图案，留着万一哪天自己能用到"><a href="#在网上汇总了一些企图玄学的图案，留着万一哪天自己能用到" class="headerlink" title="在网上汇总了一些企图玄学的图案，留着万一哪天自己能用到"></a>在网上汇总了一些企图玄学的图案，留着万一哪天自己能用到</h4><h2 id="佛祖保佑-永无BUG-永不修改"><a href="#佛祖保佑-永无BUG-永不修改" class="headerlink" title="佛祖保佑       永无BUG     永不修改"></a>佛祖保佑       永无BUG     永不修改</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--////////////////////////////////////////////////////////////////////--&gt;</span><br><span class="line">&lt;!--//                          _ooOoo_                               //--&gt;</span><br><span class="line">&lt;!--//                         o8888888o                              //--&gt;</span><br><span class="line">&lt;!--//                         88&quot; . &quot;88                              //--&gt;</span><br><span class="line">&lt;!--//                         (| ^_^ |)                              //--&gt;</span><br><span class="line">&lt;!--//                         O\  =  /O                              //--&gt;</span><br><span class="line">&lt;!--//                      ____/`-&amp;#45;&amp;#45;&apos;\____                   //--&gt;</span><br><span class="line">&lt;!--//                    .&apos;  \\|     |//  `.                         //--&gt;</span><br><span class="line">&lt;!--//                   /  \\|||  :  |||//  \                        //--&gt;</span><br><span class="line">&lt;!--//                  /  _||||| -:- |||||-  \                       //--&gt;</span><br><span class="line">&lt;!--//                  |   | \\\  -  /// |   |                       //--&gt;</span><br><span class="line">&lt;!--//                  | \_|  &apos;&apos;\-&amp;#45;&amp;#45;/&apos;&apos;  |   |               //--&gt;</span><br><span class="line">&lt;!--//                  \  .-\__  `-`  ___/-. /                       //--&gt;</span><br><span class="line">&lt;!--//                ___`. .&apos;  /&amp;#45;&amp;#45;.&amp;#45;&amp;#45;\  `. . ___     //--&gt;</span><br><span class="line">&lt;!--//              .&quot;&quot; &apos;&lt;  `.___\_&lt;|&gt;_/___.&apos;  &gt;&apos;&quot;&quot;.                  //--&gt;</span><br><span class="line">&lt;!--//            | | :  `- \`.;`\ _ /`;.`/ - ` : | |                 //--&gt;</span><br><span class="line">&lt;!--//            \  \ `-.   \_ __\ /__ _/   .-` /  /                 //--&gt;</span><br><span class="line">&lt;!--//      ========`-.____`-.___\_____/___.-`____.-&apos;========         //--&gt;</span><br><span class="line">&lt;!--//                           `=-&amp;#45;&amp;#45;=&apos;                      //--&gt;</span><br><span class="line">&lt;!--//      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        //--&gt;</span><br><span class="line">&lt;!--//         佛祖保佑       永无BUG     永不修改                        //--&gt;</span><br><span class="line">&lt;!--////////////////////////////////////////////////////////////////////--&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * _ooOoo_</span><br><span class="line"> * o8888888o</span><br><span class="line"> * 88&quot; . &quot;88</span><br><span class="line"> * (| -_- |)</span><br><span class="line"> *  O\ = /O</span><br><span class="line"> * ___/`---&apos;\____</span><br><span class="line"> * .   &apos; \\| |// `.</span><br><span class="line"> * / \\||| : |||// \</span><br><span class="line"> * / _||||| -:- |||||- \</span><br><span class="line"> * | | \\\ - /// | |</span><br><span class="line"> * | \_| &apos;&apos;\---/&apos;&apos; | |</span><br><span class="line"> * \ .-\__ `-` ___/-. /</span><br><span class="line"> * ___`. .&apos; /--.--\ `. . __</span><br><span class="line"> * .&quot;&quot; &apos;&lt; `.___\_&lt;|&gt;_/___.&apos; &gt;&apos;&quot;&quot;.</span><br><span class="line"> * | | : `- \`.;`\ _ /`;.`/ - ` : | |</span><br><span class="line"> * \ \ `-. \_ __\ /__ _/ .-` / /</span><br><span class="line"> * ======`-.____`-.___\_____/___.-`____.-&apos;======</span><br><span class="line"> * `=---=&apos;</span><br><span class="line"> *          .............................................</span><br><span class="line"> *           佛曰：bug泛滥，我已瘫痪！</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">        ´´´´´´´´██´´´´´´´</span><br><span class="line">        ´´´´´´´████´´´´´´</span><br><span class="line">        ´´´´´████████´´´´</span><br><span class="line">        ´´`´███▒▒▒▒███´´´´´</span><br><span class="line">        ´´´███▒●▒▒●▒██´´´</span><br><span class="line">        ´´´███▒▒▒▒▒▒██´´´´´</span><br><span class="line">        ´´´███▒▒▒▒██´                      项目：vue-user-center</span><br><span class="line">        ´´██████▒▒███´´´´´                 语言： ES6-babel</span><br><span class="line">        ´██████▒▒▒▒███´´                   框架： vue+vue-router+vuex+iview+axios</span><br><span class="line">        ██████▒▒▒▒▒▒███´´´´                构建工具： webpack</span><br><span class="line">        ´´▓▓▓▓▓▓▓▓▓▓▓▓▓▒´´                 版本控制： git-github</span><br><span class="line">        ´´▒▒▒▒▓▓▓▓▓▓▓▓▓▒´´´´´              css预处理: less</span><br><span class="line">        ´.▒▒▒´´▓▓▓▓▓▓▓▓▒´´´´´              代码风格：eslint-standard</span><br><span class="line">        ´.▒▒´´´´▓▓▓▓▓▓▓▒                   编辑器： phpstorm</span><br><span class="line">        ..▒▒.´´´´▓▓▓▓▓▓▓▒                  数据库:  mysql</span><br><span class="line">        ´▒▒▒▒▒▒▒▒▒▒▒▒                      服务器端脚本: php go</span><br><span class="line">        ´´´´´´´´´███████´´´´´              author: codeRabbit</span><br><span class="line">        ´´´´´´´´████████´´´´´´´</span><br><span class="line">        ´´´´´´´█████████´´´´´´</span><br><span class="line">        ´´´´´´██████████´´´´             大部分人都在关注你飞的高不高，却没人在乎你飞的累不累，这就是现实！</span><br><span class="line">        ´´´´´´██████████´´´                     我从不相信梦想，我，只，相，信，自，己！</span><br><span class="line">        ´´´´´´´█████████´´</span><br><span class="line">        ´´´´´´´█████████´´´</span><br><span class="line">        ´´´´´´´´████████´´´´´</span><br><span class="line">        ________▒▒▒▒▒</span><br><span class="line">        _________▒▒▒▒</span><br><span class="line">        _________▒▒▒▒</span><br><span class="line">        ________▒▒_▒▒</span><br><span class="line">        _______▒▒__▒▒</span><br><span class="line">        _____ ▒▒___▒▒</span><br><span class="line">        _____▒▒___▒▒</span><br><span class="line">        ____▒▒____▒▒</span><br><span class="line">        ___▒▒_____▒▒</span><br><span class="line">        ███____ ▒▒</span><br><span class="line">        ████____███</span><br><span class="line">        █ _███_ _█_███</span><br><span class="line">——————————————————————————女神保佑，代码无bug——————————————————————</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><h2 id="神兽保佑-代码无BUG！"><a href="#神兽保佑-代码无BUG！" class="headerlink" title="神兽保佑       代码无BUG！"></a>神兽保佑       代码无BUG！</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">// ┏┓　　　┏┓</span><br><span class="line">// ┏┛┻━━━┛┻┓//</span><br><span class="line">// ┃　　　　　　　┃//</span><br><span class="line">// ┃　　　━　　　┃//</span><br><span class="line">// ┃　┳┛　┗┳　┃//</span><br><span class="line">// ┃　　　　　　　┃//</span><br><span class="line">// ┃　　　┻　　　┃//</span><br><span class="line">// ┃　　　　　　　┃//</span><br><span class="line">// ┗━┓　　　┏━┛//</span><br><span class="line">// ┃　　　┃ 神兽保佑//　　　　　　　　</span><br><span class="line">// ┃　　　┃ 代码无BUG！//</span><br><span class="line">// ┃　　　┗━━━┓//</span><br><span class="line">// ┃　　　　　　　┣┓//</span><br><span class="line">// ┃　　　　　　　┏┛//</span><br><span class="line">// ┗┓┓┏━┳┓┏┛//</span><br><span class="line">// ┃┫┫　┃┫┫//</span><br><span class="line">// ┗┻┛　┗┻┛//</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># 　　　┏┓　　　┏┓</span><br><span class="line"># 　　┏┛┻━━━┛┻┓</span><br><span class="line"># 　　┃　　　　　　　 ┃ 　</span><br><span class="line"># 　　┃　　　━　　　 ┃</span><br><span class="line"># 　　┃　＞　　　＜┃</span><br><span class="line"># 　　┃　　　　　　　 ┃</span><br><span class="line"># 　　┃ . ⌒　..┃</span><br><span class="line"># 　　┃　　　　　　　 ┃</span><br><span class="line"># 　　┗━┓　　　┏━┛</span><br><span class="line"># 　　　　┃　　　┃　Codes are far away from bugs with the animal protecting　　　　　　　</span><br><span class="line"># 　　　　┃　　　┃ 神兽保佑,代码无bug</span><br><span class="line"># 　　　　┃　　　┃　　　　　　　　　　　</span><br><span class="line"># 　　　　┃　　　┃ 　　　　　　</span><br><span class="line"># 　　　　┃　　　┃</span><br><span class="line"># 　　　　┃　　　┃　　　　　　　　　　　</span><br><span class="line"># 　　　　┃　　　┗━━━┓</span><br><span class="line"># 　　　　┃　　　　　　　┣┓</span><br><span class="line"># 　　　　┃　　　　　　　┏┛</span><br><span class="line"># 　　　　┗┓┓┏━┳┓┏┛</span><br><span class="line"># 　　　　　┃┫┫　┃┫┫</span><br><span class="line"># 　　　　　┗┻┛　┗┻┛</span><br><span class="line">#        ┏┓　　　┏┓+ +</span><br><span class="line">#　　　┏┛┻━━━┛┻┓ + +</span><br><span class="line">#　　　┃　　　　　　　┃ 　</span><br><span class="line">#　　　┃　　　━　　　┃ ++ + + +</span><br><span class="line">#　　 ████━████ ┃+</span><br><span class="line">#　　　┃　　　　　　　┃ +</span><br><span class="line">#　　　┃　　　┻　　　┃</span><br><span class="line">#　　　┃　　　　　　　┃ + +</span><br><span class="line">#　　　┗━┓　　　┏━┛</span><br><span class="line">#　　　　　┃　　　┃　　　　　　　　　　　</span><br><span class="line">#　　　　　┃　　　┃ + + + +</span><br><span class="line">#　　　　　┃　　　┃　　　　Codes are far away from bugs with the animal protecting　　　</span><br><span class="line">#　　　　　┃　　　┃ + 　　　　神兽保佑,代码无bug　　</span><br><span class="line">#　　　　　┃　　　┃</span><br><span class="line">#　　　　　┃　　　┃　　+　　　　　　　　　</span><br><span class="line">#　　　　　┃　 　　┗━━━┓ + +</span><br><span class="line">#　　　　　┃ 　　　　　　　┣┓</span><br><span class="line">#　　　　　┃ 　　　　　　　┏┛</span><br><span class="line">#　　　　　┗┓┓┏━┳┓┏┛ + + + +</span><br><span class="line">#　　　　　　┃┫┫　┃┫┫</span><br><span class="line">#　　　　　　┗┻┛　┗┻┛+ + + +</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#                代码无BUG!</span><br><span class="line">#      ,----------------,              ,---------,</span><br><span class="line">#         ,-----------------------,          ,&quot;        ,&quot;|</span><br><span class="line">#       ,&quot;                      ,&quot;|        ,&quot;        ,&quot;  |</span><br><span class="line">#      +-----------------------+  |      ,&quot;        ,&quot;    |</span><br><span class="line">#      |  .-----------------.  |  |     +---------+      |</span><br><span class="line">#      |  |                 |  |  |     | -==----&apos;|      |</span><br><span class="line">#      |  |  I LOVE DOS!    |  |  |     |         |      |</span><br><span class="line">#      |  |  Bad command or |  |  |/----|`---=    |      |</span><br><span class="line">#      |  |  C:\&gt;_          |  |  |   ,/|==== ooo |      ;</span><br><span class="line">#      |  |                 |  |  |  // |(((( [33]|    ,&quot;</span><br><span class="line">#      |  `-----------------&apos;  |,&quot; .;&apos;| |((((     |  ,&quot;</span><br><span class="line">#      +-----------------------+  ;;  | |         |,&quot;</span><br><span class="line">#         /_)______________(_/  //&apos;   | +---------+</span><br><span class="line">#    ___________________________/___  `,</span><br><span class="line">#   /  oooooooooooooooo  .o.  oooo /,   \,&quot;-----------</span><br><span class="line">#  / ==ooooooooooooooo==.o.  ooo= //   ,`\--&#123;)B     ,&quot;</span><br><span class="line"># /_==__==========__==_ooo__ooo=_/&apos;   /___________,&quot;</span><br><span class="line">#</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//   █████▒█    ██  ▄████▄   ██ ▄█▀       ██████╗ ██╗   ██╗ ██████╗</span><br><span class="line">// ▓██   ▒ ██  ▓██▒▒██▀ ▀█   ██▄█▒        ██╔══██╗██║   ██║██╔════╝</span><br><span class="line">// ▒████ ░▓██  ▒██░▒▓█    ▄ ▓███▄░        ██████╔╝██║   ██║██║  ███╗</span><br><span class="line">// ░▓█▒  ░▓▓█  ░██░▒▓▓▄ ▄██▒▓██ █▄        ██╔══██╗██║   ██║██║   ██║</span><br><span class="line">// ░▒█░   ▒▒█████▓ ▒ ▓███▀ ░▒██▒ █▄       ██████╔╝╚██████╔╝╚██████╔╝</span><br><span class="line">//  ▒ ░   ░▒▓▒ ▒ ▒ ░ ░▒ ▒  ░▒ ▒▒ ▓▒       ╚═════╝  ╚═════╝  ╚═════╝</span><br><span class="line">//  ░     ░░▒░ ░ ░   ░  ▒   ░ ░▒ ▒░</span><br><span class="line">//  ░ ░    ░░░ ░ ░ ░        ░ ░░ ░</span><br><span class="line">//           ░     ░ ░      ░  ░</span><br><span class="line">//                 ░</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> _______________########_______________________</span><br><span class="line"> ______________##########_______________________</span><br><span class="line">______________############_____________________</span><br><span class="line">______________#############____________________</span><br><span class="line">_____________##__###########___________________</span><br><span class="line">____________###__######_#####__________________</span><br><span class="line">____________###_#######___####_________________</span><br><span class="line">___________###__##########_####________________</span><br><span class="line">__________####__###########_####_______________</span><br><span class="line">________#####___###########__#####_____________</span><br><span class="line">_______######___###_########___#####___________</span><br><span class="line">_______#####___###___########___######_________</span><br><span class="line">______######___###__###########___######_______</span><br><span class="line">_____######___####_##############__######______</span><br><span class="line">____#######__#####################_#######_____</span><br><span class="line">____#######__##############################____</span><br><span class="line">___#######__######_#################_#######___</span><br><span class="line">___#######__######_######_#########___######___</span><br><span class="line">___#######____##__######___######_____######___</span><br><span class="line">___#######________######____#####_____#####____</span><br><span class="line">____######________#####_____#####_____####_____</span><br><span class="line">_____#####________####______#####_____###______</span><br><span class="line">______#####______;###________###______#________</span><br><span class="line">________##_______####________####______________ </span><br><span class="line"></span><br><span class="line">         葱官赐福  百无禁忌</span><br><span class="line"></span><br><span class="line"> */</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      在网上汇总了一些企图玄学的图案，留着万一哪天自己能用到
    
    </summary>
    
      <category term="企图玄学" scheme="http://suiwo.xyz/categories/%E4%BC%81%E5%9B%BE%E7%8E%84%E5%AD%A6/"/>
    
    
      <category term="企图玄学" scheme="http://suiwo.xyz/tags/%E4%BC%81%E5%9B%BE%E7%8E%84%E5%AD%A6/"/>
    
  </entry>
  
</feed>
